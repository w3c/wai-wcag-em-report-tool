{
  "version": 3,
  "file": "main.css",
  "sources": [
    "AddOther.svelte",
    "EarlResult.svelte",
    "Editable.svelte",
    "File.svelte",
    "Input.svelte",
    "MultipleChoice.svelte",
    "SampleInput.svelte",
    "Textarea.svelte",
    "WebTechnologiesInput.svelte",
    "BaseLayout.svelte",
    "OverviewPage.svelte",
    "Auditor.svelte",
    "AuditorImport.svelte",
    "Button.svelte",
    "LanguageSelect.svelte",
    "NavigationBar.svelte",
    "Page.svelte",
    "Pager.svelte",
    "Panel.svelte",
    "Report.svelte",
    "ReportAllResults.svelte",
    "ReportHeaderMultiValue.svelte",
    "ReportHeaderValue.svelte",
    "ReportSummary.svelte",
    "ResourceLink.svelte",
    "YourReport.svelte",
    "AddOther.svelte",
    "Field.svelte",
    "Fieldset.svelte",
    "File.svelte",
    "HelpText.svelte",
    "Input.svelte",
    "MultipleChoice.svelte",
    "Sample.svelte",
    "AuditorFilter.svelte",
    "AuditorSamples.svelte",
    "Criterion.svelte",
    "ReportSummary.svelte",
    "ResultCard.svelte"
  ],
  "sourcesContent": [
    "<!--\n * @component\n * ListInput\n * A customizable forminput that receives\n * a value as array with either a string or an object.\n * a format of how to add a list item which is\n * an array of objects containing:\n * - required label\n * - required type; text | textarea | select | checkbox(group)\n * - optional helptext\n * - optional ...any; required props to pass on to specific formcomponents\n *\n * -->\n\n<div class=\"AddOther__container\">\n  <div\n    class=\"AddOther__Inputs\"\n    bind:this=\"{otherInputsContainer}\"\n    on:keydown=\"{handleAddKeydown}\"\n  >\n    <slot />\n  </div>\n  <Button type=\"secondary\" on:click=\"{handleAddClick}\">{label}</Button>\n</div>\n\n<style>\n  :global(.AddOther__Inputs > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n  :global(.AddOther__Inputs > *:last-child) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  import Button from '@app/components/ui/Button.svelte';\n\n  export let label = 'Add';\n\n  const dispatch = createEventDispatcher();\n\n  let otherInputsContainer;\n  let otherInputs;\n\n  onMount(() => {\n    otherInputs = Array.from(\n      otherInputsContainer.querySelectorAll('input, select, textarea')\n    );\n  });\n\n  function handleAddKeydown(event) {\n    if (event.key.toLowerCase() === 'enter') {\n      event.preventDefault();\n\n      dispatchAdd();\n    }\n  }\n\n  function handleAddClick(event) {\n    event.preventDefault();\n    dispatchAdd();\n  }\n\n  function dispatchAdd() {\n    const detail = otherInputs.map((input) => {\n      return input.value;\n    });\n\n    if (otherInputs.length > 0) {\n      // Clear fields\n      otherInputs.forEach((input) => {\n        input.value = '';\n      });\n\n      otherInputs[0].focus();\n    }\n\n    dispatch('ADD', detail);\n  }\n</script>\n",
    "<!--\n * EarlResult\n *\n * use like:\n *   <EarlResult {...assertion} />\n *\n * Where assertion should be like\n * an earl:Assertion object picked from\n * the assertionStore: $assertions.\n *\n * Important here is to pass the correct result,\n * so test AND subject should always match.\n * -->\n<fieldset class=\"Criterion__Result\">\n  <legend class=\"Criterion__Subject\">\n    {#if label}\n      {label}\n    {:else}\n      {$translate('PAGES.AUDIT.RESULTS_FOR')}: {subject.title || subject.description || `subject ${subject.ID}`}\n    {/if}\n  </legend>\n\n  <div class=\"Criterion__Fields\">\n    <Select\n      id=\"{`assertion__${_assertion.ID}--result__outcome`}\"\n      label=\"{$translate('PAGES.AUDIT.LABEL_OUTCOME')}\"\n      options=\"{outcomeOptions}\"\n      value=\"{_assertion.result.outcome.id}\"\n      on:change=\"{handleOutcomeChange}\"\n    />\n\n    <Textarea\n      id=\"{`assertion__${_assertion.ID}--result__description`}\"\n      label=\"{$translate('PAGES.AUDIT.ASSERTION_RESULT_DESCRIPTION_LABEL')}\"\n      bind:value=\"{_assertion.result.description}\"\n      on:change=\"{handleResultChange}\"\n      className=\"Criterion__Observation\"\n    >\n      <span slot=\"after-textarea\" class=\"view-in-report\">\n      <Link to={`/evaluation/view-report#criterion-${_assertion.test.num.replaceAll('.', '')}`}>{TRANSLATED.VIEW_IN_REPORT}</Link>\n      </span>\n    </Textarea>\n  </div>\n</fieldset>\n\n<style>\n  .Criterion__Result {\n    display: block;\n    border: none;\n    margin: 1em 0 0;\n  }\n\n  .Criterion__Subject {\n    padding: 0;\n    font-size: 1em;\n    overflow-wrap: anywhere;\n  }\n  .Criterion__Fields {\n    display: flex;\n    align-items: flex-start;\n    flex-direction: column;\n  }\n  .view-in-report {\n    order: -1;\n    text-align: right;\n  }\n  /* the following selectors are overly specific for cascading reasons */\n  :global(.Criterion__Fields :last-child) {\n    flex: 2;\n  }\n  :global(div.Criterion__Fields .Field:last-child label) {\n    order: -2;\n  }\n  :global(div.Criterion__Fields div.Field.Criterion__Observation) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n  @media (min-width: 60em) {\n    .Criterion__Fields {\n      flex-direction: row;\n      gap: 2rem;\n    }\n  }\n</style>\n\n<script>\n  /**\n   * This is a result that belongs to an Assertion\n   * The assertion required should match:\n   * - subject\n   * - test\n   */\n\n  import { getContext } from 'svelte';\n  import { Link } from 'svelte-navigator';\n\n  import assertions from '@app/stores/earl/assertionStore/index.js';\n\n  import Select from '@app/components/form/Select.svelte';\n  import Textarea from '@app/components/form/Textarea.svelte';\n\n  import { CriteriaSelected } from '@app/stores/selectedCriteriaStore.js';\n\n  export let label = undefined;\n  // Used to display subject.title\n  export let subject = {};\n\n  // Used for id creation (test.id)\n  export let test = {};\n\n  const { translate } = getContext('app');\n  const { outcomeValues } = getContext('Evaluation');\n\n  $: TRANSLATED = {\n    VIEW_IN_REPORT: $translate('PAGES.AUDIT.VIEW_IN_REPORT')\n  };\n\n  $: outcomeOptions = $outcomeValues.map((outcomeValue, index) => {\n    const title = outcomeValue.title;\n    const value = outcomeValue.id;\n\n    return {\n      title,\n      value,\n      selected: index === $outcomeValues.length - 1\n    };\n  });\n\n  // Get or create an Assertion\n  $: _assertion =\n    $assertions.find(($assertion) => {\n      const matchedTest = $assertion.test === test;\n      const matchedSubject = $assertion.subject === subject;\n\n      return matchedTest && matchedSubject;\n    }) || assertions.create({ subject, test });\n\n  function handleOutcomeChange(event) {\n    const value = event.target.value;\n    _assertion.result.outcome = $outcomeValues.find((outcomeValue) => {\n      return outcomeValue.id === value;\n    });\n\n    _assertion.result.setDate();\n    assertions.update(() => $assertions);\n  }\n\n  function handleResultChange() {\n    _assertion.result.setDate();\n    assertions.update(() => $assertions);\n  }\n</script>\n",
    "<div class=\"Editable\">\n  <div class=\"Editable__Contents\">\n    {#if removable}\n    <button\n      type=\"button\"\n      class=\"Editable__Control--delete\"\n      on:click=\"{dispatchDelete}\"\n    >\n      <svg \n        focusable=\"false\"\n        aria-hidden=\"true\"\n        role=\"presentation\"\n        xmlns=\"http://www.w3.org/2000/svg\" \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"currentColor\" \n        stroke-width=\"2\" \n        stroke-linecap=\"round\" \n        stroke-linejoin=\"round\">\n          <polyline points=\"3 6 5 6 21 6\"/>\n          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n          <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" stroke=\"#ffffff\"/>\n          <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" stroke=\"#ffffff\" />\n      </svg>\n      <span class=\"visually-hidden\">{TRANSLATED.DELETE} {label}</span>\n    </button>\n    {/if}    \n    <slot />\n  </div>\n\n  <div class=\"Editable__Controls\">\n    {#if !persistent}\n      <button\n        type=\"button\"\n        class=\"Editable__Control--edit button-secondary\"\n        on:click=\"{handleEditClick}\"\n        bind:this=\"{EditToggle}\"\n      >{#if editing}Done{:else}Edit{/if}\n        <span class=\"visually-hidden\">{label}</span></button>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .Editable__Control--delete {\n    font-size: 1em;;\n    float: right;\n    margin-left: 1em;\n    margin-top: .25em;\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    color: currentColor;\n  }\n  .Editable {\n    background: var(--trans-line-grey);\n    padding: 1em;   \n  }\n  :global(.Editable .Editable__Contents .sample-input .Field) {\n    margin-bottom: .5em;\n  }\n  :global(.Editable legend) {\n    font-size: 1em;\n    padding: 0; \n    margin-bottom: .25em;\n  }\n  :global(.Editable fieldset) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script context=\"module\">\n  import { writable } from 'svelte/store';\n\n  export const editMode = writable({});\n</script>\n\n<script>\n  import { getContext, createEventDispatcher } from 'svelte';\n\n  export let id = '';\n  export let label = '';\n  export let persistent = false;\n  export let removable = false;\n  \n  const { translate } = getContext('app');\n\n  const dispatch = createEventDispatcher();\n  const EVENT = {\n    DELETE: 'DELETE',\n    EDIT: 'EDIT'\n  };\n\n  let EditToggle;\n\n  $: editing = $editMode[id] = persistent;\n\n  $: TRANSLATED = {\n    DELETE: $translate('UI.COMMON.DELETE')\n  };\n\n  function handleEditClick() {\n    if (!editing) {\n      dispatchEdit();\n    }\n\n    $editMode[id] = !editing;\n  }\n\n  function dispatchDelete() {\n    dispatch(EVENT.DELETE, id);\n  }\n\n  function dispatchEdit() {\n    dispatch(EVENT.EDIT, id);\n  }\n</script>\n",
    "<div class=\"File\">\n  <input\n    id=\"{id}\"\n    class=\"File__input visuallyhidden\"\n    type=\"file\"\n    accept=\"{accept}\"\n    bind:files\n    bind:value\n    on:change\n  />\n  <label for=\"{id}\" class=\"File__label button button-secondary\">\n    {label}\n    {#if labelsub}<span class=\"File__label-hint\">{labelsub}</span>{/if}\n  </label>\n  {#if showFiles}\n    <output for=\"{id}\" title=\"Selected file(s)\">\n      {#each files as file}{file.name}<br />{:else}No file selected{/each}\n    </output>\n  {/if}\n</div>\n\n<style>\n  div { display: inline-block; }\n  :focus + .File__label {\n    color: #fff;\n    background-color: #036;\n    border-color: #036;\n  }\n\n  .File__label {\n    display: block;\n    text-align: center;\n  }\n  .File__label-hint {\n    display: block;\n    font-weight: 400;\n  }\n</style>\n\n<script context=\"module\">\n  export function readFile(file, callback = () => {}) {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      callback(fileReader.result);\n    };\n\n    fileReader.onabort = () => {\n      console.error('Reading aborted');\n    };\n\n    fileReader.onerror = (error) => {\n      throw error;\n    };\n\n    fileReader.readAsText(file);\n  }\n</script>\n\n<script>\n  export let id;\n  export let label = 'File';\n  export let labelsub = '';\n  export let value = '';\n  export let accept = ['.json', '.jsonld'].join(',');\n  export let showFiles = false;\n\n  let files = [];\n</script>\n",
    "<Field id=\"{id}\" {...$$restProps}>\n  <input\n    id=\"{id}\"\n    type=\"text\"\n    on:keydown\n    bind:value\n    bind:this=\"{textInput}\"\n  />\n</Field>\n\n<script>\n  import { onMount } from 'svelte';\n  import Field from './Field.svelte';\n\n  export let id;\n  export let value = '';\n  export let autofocus = false;\n\n  let textInput;\n\n  onMount(() => {\n    if (autofocus) {\n      textInput.focus();\n    }\n  });\n</script>\n\n<style>\n  input {\n    max-width: 40em;;\n  }\n</style>",
    "<Fieldset id=\"{id}\" legend={label} {...$$restProps}>\n\n  <ol class=\"MultipleChoice__options{columns ? '--columns' : ''}\">\n    {#each options as option, index (option)}\n      <li class=\"MultipleChoice__option\">\n        <!-- type attribute cant be dynamic with bind:group -->\n        {#if type === CHECKBOX}\n          <!-- svelte-ignore a11y-no-onchange -->\n          <input\n            id=\"{`${id}_${index}`}\"\n            class=\"MultipleChoice__option__input\"\n            type=\"checkbox\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {:else if type === RADIO}\n          <input\n            id=\"{`${id}_${index}`}\"\n            class=\"MultipleChoice__option__input\"\n            type=\"radio\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {/if}\n        <label class=\"MultipleChoice__option__label\" for=\"{`${id}_${index}`}\">{option.title || option}</label>\n      </li>\n    {/each}\n  </ol>\n\n  {#if editable}\n    <AddOther label=\"Add other {label}\" on:ADD=\"{handleOptionAdd}\">\n      <Input id=\"{id}__other\" label=\"Other {label}\" />\n    </AddOther>\n  {/if}\n</Fieldset>\n\n<style>\n  .MultipleChoice__option__label,\n  .MultipleChoice__option__input {\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  .MultipleChoice__option__input {\n    flex-grow: 0;\n    flex-shrink: 0;\n    width: 1em;\n    height: 1em;\n  }\n\n  .MultipleChoice__option__label {\n    margin-left: 0.5em;\n    flex-grow: 0;\n    flex-shrink: 1;\n    word-break: break-word;\n  }\n\n  .MultipleChoice__option__input:focus,\n  .MultipleChoice__option__input:hover {\n    outline: 2px solid currentColor;\n    outline-offset: 2px;\n  }\n\n  .MultipleChoice__options,\n  .MultipleChoice__options--columns {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .MultipleChoice__options--columns {\n    columns: 4 10em;\n    column-gap: 2em;\n  }\n\n  .MultipleChoice__option {\n    break-inside: avoid-column;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n</style>\n\n<script context=\"module\">\n  const CHECKBOX = 'checkbox';\n  const RADIO = 'radio';\n</script>\n\n<script>\n  import AddOther from './AddOther.svelte';\n  import Fieldset from './Fieldset.svelte';\n  import Input from './Input.svelte';\n\n  export let id;\n  export let label;\n  export let type = CHECKBOX;\n  export let options = [];\n  export let columns = false;\n  export let editable = false;\n  export let value = [];\n\n  function handleOptionAdd(event) {\n\n    const newValue = event.detail.join();\n\n    if (!newValue) {\n      return;\n    }\n\n    const newOption = {\n      title: event.detail.join()\n      // checked: true\n    };\n\n    if (!options.some((option) => option.title === newOption.title)) {\n      options = [...options, newOption];\n      value = [...value, newOption.title];\n    }\n  }\n</script>\n",
    "<!--\n * @component\n *   SampleInput\n * -->\n<fieldset id=\"{id}\">\n  <legend>\n    {label}\n    {#if helptext}\n    <button \n      type=\"button\" \n      on:click={toggle} \n      class=\"button button-small showhidebutton\" \n      aria-expanded={showHelptext} \n      aria-controls={`field-helptext-${id}`}        \n      aria-label={`${TRANSLATED.SHOW_HIDE_HELPTEXT} ${TRANSLATED.FOR} ${label}`}>\n        {TRANSLATED.SHOW_HIDE_HELPTEXT}\n    </button>\n    {#if showHelptext}\n        <div class=\"SampleInput__helptext\" id={`field-helptext-${id}`}> \n        {@html helptext}\n        </div>\n      {/if}\n    {/if}\n  </legend>\n  <slot />\n\n  {#if value.length > 0}\n    <ol title=\"{label}\" bind:this=\"{valueContainer}\">\n      {#each value as sample, index (sample.ID)}\n        <li>\n          <Sample\n            id=\"{id}__{index + 1}\"\n            count={index + 1}\n            bind:data=\"{sample}\"\n            on:DELETE=\"{handleSampleDelete}\"\n          />\n        </li>\n      {/each}\n    </ol>\n  {:else}\n    <p><em>{TRANSLATED.NO_SAMPLE}</em></p>\n  {/if}\n\n  <AddOther\n    label=\"{TRANSLATED.ADD_PAGE_BUTTON}\"\n    on:ADD=\"{handleSampleAdd}\"\n  ></AddOther>\n</fieldset>\n<!-- /component -->\n\n<style>\n  ol {\n    padding: 0;\n  }\n    ol li {\n      list-style: none;\n    }\n  .SampleInput__helptext {\n    font-size: 1rem; /* reset legend size */\n    font-weight: normal; /* reset legend weight */\n    margin: 1em 0;\n    border: solid 1px #069;\n    padding: 1em;\n    background-color: #d0e1f1;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import subjects, { TestSubjectTypes } from '@app/stores/earl/subjectStore/index.js';\n\n  import AddOther from '@app/components/form/AddOther.svelte';\n  import Sample from './Sample.svelte';\n\n  export let id;\n  export let label;\n  export let helptext;\n  export let value = [];\n\n  let valueContainer;\n  let showHelptext = false;\n  const { translate } = getContext('app');\n  import assertions from '@app/stores/earl/assertionStore/index.js';\n\n  $: TRANSLATED = {\n    NO_SAMPLE: $translate('PAGES.SAMPLE.NO_PAGES_DEFINED'),\n    ADD_PAGE_BUTTON: $translate('PAGES.SAMPLE.BTN_ADD_PAGE'),\n    DELETE_CONFIRM: $translate('PAGES.SAMPLE.DELETE_CONFIRM'),\n    SHOW_INFO_BUTTON: $translate('UI.COMMON.BUTTON.INFO'),\n    SHOW_HIDE_HELPTEXT: showHelptext\n      ? $translate('UI.COMMON.BUTTON.HIDE', {\n          values: { subject: $translate('UI.COMMON.BUTTON.INFO') }\n        })\n      : $translate('UI.COMMON.BUTTON.SHOW', {\n          values: { subject: $translate('UI.COMMON.BUTTON.INFO') }\n        }),\n    FOR: $translate('UI.COMMON.FOR')\n  };\n\n  function toggle() {\n    showHelptext = !showHelptext;\n  }\n\n  function handleSampleAdd() {\n    const newSample = subjects.create({\n      type: TestSubjectTypes.WEBPAGE\n    });\n\n    value = [...value, newSample];\n  }\n\n  function handleSampleDelete(event) {\n    if (window.confirm(TRANSLATED.DELETE_CONFIRM)) {\n      const removeSample = value.find(sample => sample.ID === event.detail);\n      const indexSample = value.indexOf(removeSample);\n\n      // value need to be set explicitly\n      const newValue = value;\n      newValue.splice(indexSample, 1);\n      value = newValue;\n      // @TODO: removeSample.delete(); !required for cleanup\n      $assertions = $assertions.filter(assertion => assertion.subject.id !== removeSample.id);\n      subjects.remove(removeSample);\n  }\n}\n</script>\n",
    "<Field {id} {label} {helptext} {className}>\n  <textarea id=\"{id}\" rows={contentBasedRows} bind:value on:change></textarea>\n  <slot name=\"after-textarea\"></slot>\n</Field>\n\n<style>\n  textarea {\n    display: block;\n    width: 100%;\n    max-width: 40em;\n  }\n  :global(.criterion textarea) {\n    max-width: none;\n  }\n</style>\n\n<script>\n  import Field from './Field.svelte';\n\n  const defaultRows = 5;\n  let contentBasedRows;\n\n  $: contentBasedRows = value && value.match(/\\n/g) ? \n    value.match(/\\n/g).length + defaultRows \n    : defaultRows;\n  \n  export let id;\n  export let label;\n  export let helptext = \"\";\n  export let value = \"\";\n  export let className = \"\";\n</script>\n",
    "<MultipleChoice\n  id=\"technologies_relied_upon\"\n  label=\"{TECHNOLOGIES_LABEL}\"\n  helptext=\"{TECHNOLOGIES_HELPTEXT}\"\n  bind:options=\"{$webTechnologyStore}\"\n  bind:value\n/>\n\n<div class=\"add-tech\">\n  <legend>{BTN_ADD_TECH}</legend>\n  <AddOther\n    label=\"{ADD_TECH}\"\n    on:ADD=\"{handleTechnologyAdd}\">\n    <div class=\"tech-input\">\n      <Input\n        id=\"technologies_relied_upon__other--name\"\n        label=\"{TECHNOLOGY_NAME_LABEL}\"\n      />\n      <Input\n        id=\"technologies_relied_upon__other--url\"\n        label=\"{TECHNOLOGY_URL_LABEL}\"\n      />\n    </div>\n  </AddOther>\n</div>\n\n<style>\n  .add-tech {\n    background: var(--trans-line-grey);\n    padding: 1em;   \n  }\n\n  .add-tech legend {\n    font-size: 1em;\n    padding: 0;\n    margin-bottom: .25em;\n  }\n\n  @media (min-width: 40em) {\n    .tech-input {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 1em;\n    }\n  }\n</style>\n\n<script>\n  import { getContext, onMount } from 'svelte';\n\n  import { webTechnologyStore } from '@app/stores/exploreStore.js';\n  import exploreStore from '@app/stores/exploreStore.js';\n\n  import AddOther from './AddOther.svelte';\n  import Input from './Input.svelte';\n  import MultipleChoice from './MultipleChoice.svelte';\n\n  export let value = [];\n\n  const { translate } = getContext('app');\n  $: TECHNOLOGIES_LABEL = $translate('PAGES.EXPLORE.HD_RELIEDUP_TECH');\n  $: TECHNOLOGIES_HELPTEXT = $translate('PAGES.EXPLORE.INF_RELIEDUP_TECH');\n  $: TECHNOLOGY_HELPTEXT = $translate('PAGES.EXPLORE.PLH_TECH');\n  $: TECHNOLOGY_NAME_LABEL = $translate('PAGES.EXPLORE.LABEL_TECH');\n  $: TECHNOLOGY_URL_LABEL = $translate('PAGES.EXPLORE.LABEL_TECH_SPEC');\n  $: BTN_ADD_TECH = $translate('PAGES.EXPLORE.BTN_ADD_TECH');\n  $: ADD_TECH = $translate('PAGES.EXPLORE.ADD_TECH');\n\n  function handleTechnologyAdd(event) {\n    const { detail } = event;\n    const [title, description] = detail;\n    const currentTechnologies = $webTechnologyStore;\n    const withValue = detail.reduce((hasValue, value) => {\n      if (hasValue) {\n        return true;\n      }\n\n      return value.trim().length > 0;\n    }, false);\n\n    function exists(tech) {\n      return currentTechnologies.some((currentTech) => {\n        return (\n          currentTech === tech ||\n          currentTech.title === tech.title ||\n          currentTech.description === tech.description\n        );\n      });\n    }\n\n    if (!withValue) {\n      return;\n    }\n\n    if (withValue && !exists({ title, detail })) {\n      webTechnologyStore.create({\n        title,\n        description\n      });\n\n      value = [...value, title];\n    }\n  }\n\n  function updateTech() {\n    $exploreStore[\"TECHNOLOGIES_RELIED_UPON\"].forEach((tech) => {\n      const currentTechnologies = $webTechnologyStore;\n      let exists = currentTechnologies.filter((currentTech) => {\n        return currentTech.title == tech;\n      });\n\n      if(exists.length == 0){\n        let title = tech;\n        let description = \"\";\n        webTechnologyStore.create({\n          title,\n          description\n        });\n      }\n    });\n  }\n\n  onMount(() => {\n    updateTech();\n  });\n\n</script>\n",
    "<!-- @Layout:Base -->\n<div class=\"Controls default-grid\">\n  <LanguageSelect locales=\"{locales}\" />\n</div>\n\n<div id=\"site-header\" class=\"site-header\">\n  <div class=\"default-grid\">\n    <div class=\"tool-header\">\n      <div class=\"tool-header-name\">\n        WCAG-EM R<span class=\"display-phablet\">eport </span>T<span class=\"display-phablet\">ool</span>\n      </div>\n      <div class=\"tool-header-logo\">\n        <a href=\"http://w3.org/\"><img\n            alt=\"W3C\"\n            src={`${$basepath}/images/w3c.svg`}\n            width=\"50\"\n            height=\"24\"\n          /></a>\n        <a href=\"http://w3.org/WAI/\"><img\n            alt=\"Web Accessibility Initiative\"\n            src={`${$basepath}/images/wai.svg`}\n            width=\"90\"\n            height=\"24\"\n          /></a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<NavigationBar />\n\n<slot />\n\n{#if !isAcknowledgements}\n<Pager label=\"{TRANSLATED.STEP}\" context=\"{pagerContext}\" />\n{/if}\n\n<!-- /@Layout -->\n\n<style>\n  .site-header .tool-header {\n    grid-column: 2 / 10;\n    width: 100%;\n    display: flex;\n    align-items: center;\n  }\n  .BaseLayout {\n    padding: 2em 1em;\n  }\n\n  .Controls {\n    font-size: 0.8125em;\n  }\n\n  @media (min-width: 60em) {\n    .BaseLayout {\n      padding: 2em 0;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { useLocation } from 'svelte-navigator';\n\n  import { routes, basepath } from '@app/stores/appStore.js';\n  import locales from '@app/locales/index.json';\n\n  import LanguageSelect from '@app/components/ui/LanguageSelect.svelte';\n  import NavigationBar from '@app/components/ui/NavigationBar.svelte';\n  import Pager from '@app/components/ui/Pager.svelte';\n\n  const { translate } = getContext('app');\n  const location = useLocation();\n\n  $: TRANSLATED = {\n    STEP: $translate('UI.NAV.STEP', { default: 'step' }),\n  };\n\n  $: isAcknowledgements = $location.pathname === $routes.ACKNOWLEDGEMENTS.path;\n\n  $: pagerContext = Object.keys($routes).map((key) => {\n    return $routes[key];\n  });  \n</script>\n",
    "<!--\n * @component\n *   OverviewPage\n * -->\n<Page title=\"{TRANSLATED.PAGE_TITLE}\" pageid=\"overview\">\n  {#if !$previousVersionMsgDismissed}\n  <div style=\"background: var(--footer-grey); border: 0; padding: 1em; display: flex; align-items: center\" lang=\"en\">\n    <p style=\"max-width: none; margin: 0;\">\n      Welcome to the <a href=\"https://github.com/w3c/wai-wcag-em-report-tool/wiki/Changelog:-What's-new-in-the-2021-redesign-of-the-WCAG-EM-Report-Tool\">updated</a> WCAG-EM Report Tool. You can open your existing reports with this tool. The <a href=\"https://w3c.github.io/wcag-em-report-tool/\">previous version</a> is available, and is no longer supported. \n    </p>\n    <button on:click=\"{dismissPreviousVersionMessage}\" style=\"margin-left: 1em;\" type=\"button\" class=\"button-secondary\">Dismiss</button>  </div>\n  {/if}\n\n  <div class=\"getting-started\">\n    <p class=\"getting-started__intro\">\n      {@html TRANSLATED.INTRODUCTION_P1}\n    </p>\n\n    <div class=\"getting-started__buttons\">\n      <Button on:click=\"{handleNewEvaluationClick}\">\n        {TRANSLATED.BUTTON_NEW_EVALUATION}\n      </Button>\n      <OpenEvaluation />\n    </div>\n  </div> \n\n  <ExpandCollapseAll />\n\n  <details>\n    <summary><h2>{TRANSLATED.TIPS_HEADING}</h2></summary>\n    <ul>\n      <li>{@html TRANSLATED.TIPS_1}</li>\n      <li>{@html TRANSLATED.TIPS_2}</li>\n      <li>{@html TRANSLATED.TIPS_3}</li>\n    </ul>\n  </details>\n\n  <details>\n    <summary><h2>{TRANSLATED.ABOUT_HEADING}</h2></summary>\n    {@html TRANSLATED.ABOUT_1}\n    {@html TRANSLATED.ABOUT_2}\n  </details>\n\n  <details>\n    <summary><h2>{TRANSLATED.USAGE_HEADING}</h2></summary>\n    <ul>\n      <li>{TRANSLATED.USAGE_LI1}</li>\n      <li>{TRANSLATED.USAGE_LI2}</li>\n      <li>{TRANSLATED.USAGE_LI3}</li>\n    </ul>\n  </details>\n\n</Page>\n<!-- /component -->\n\n<script>\n  import { getContext } from 'svelte';\n  import { useNavigate } from 'svelte-navigator';\n\n  import Page from '@app/components/ui/Page.svelte';\n  import ExpandCollapseAll from '@app/components/ui/ExpandCollapseAll.svelte';\n  import OpenEvaluation from '@app/components/form/OpenEvaluation.svelte';\n  import Button from '@app/components/ui/Button.svelte';\n\n  import { routes, previousVersionMsgDismissed } from '@app/stores/appStore.js';\n  import evaluationStore from '@app/stores/evaluationStore.js';\n  import { interacted } from '@app/stores/interactedStore.js';\n\n  const { translate } = getContext('app');\n  const navigate = useNavigate();\n\n  $: TRANSLATED = {\n    BUTTON_NEW_EVALUATION: $translate('UI.NAV.MENU_NEW', {\n      default: 'New report'\n    }),\n    PAGE_TITLE: $translate('PAGES.START.SUBTITLE'),\n    INTRODUCTION_P1: $translate('PAGES.START.INTRO_1'),\n    USAGE_HEADING: $translate('PAGES.START.USAGE_HD'),\n    USAGE_LI1: $translate('PAGES.START.USAGE_LI1'),\n    USAGE_LI2: $translate('PAGES.START.USAGE_LI2'),\n    USAGE_LI3: $translate('PAGES.START.USAGE_LI3'),\n    TIPS_HEADING: $translate('PAGES.START.TIPS_HD'),\n    TIPS_1: $translate('PAGES.START.TIPS_1'),\n    TIPS_2: $translate('PAGES.START.TIPS_2'),\n    TIPS_3: $translate('PAGES.START.TIPS_3'),\n    ABOUT_HEADING: $translate('PAGES.START.ABOUT_HEADING'),\n    ABOUT_1: $translate('PAGES.START.ABOUT_1'),\n    ABOUT_2: $translate('PAGES.START.ABOUT_2'),\n    CHOICES_HEADING: $translate('PAGES.START.CHOICES_HEADING'),\n    CHOICES_INTRO: $translate('PAGES.START.CHOICES_INTRO'),\n    CHOICES_DT1: $translate('PAGES.START.CHOICES_DT1'),\n    CHOICES_DD1: $translate('PAGES.START.CHOICES_DD1'),\n    CHOICES_DT2: $translate('PAGES.START.CHOICES_DT2'),\n    CHOICES_DD2: $translate('PAGES.START.CHOICES_DD2'),\n    CHOICES_DT3: $translate('PAGES.START.CHOICES_DT3'),\n    CHOICES_DD3: $translate('PAGES.START.CHOICES_DD3'),\n    CHOICES_DT4: $translate('PAGES.START.CHOICES_DT4'),\n    CHOICES_DD4: $translate('PAGES.START.CHOICES_DD4'),\n    CHOICES_DT5: $translate('PAGES.START.CHOICES_DT5'),\n    CHOICES_DD5: $translate('PAGES.START.CHOICES_DD5'),\n    CLEAR_WARNING: $translate('UI.NAV.CLEARWARNING')\n  };\n\n  function handleNewEvaluationClick() {\n    if ($interacted == true){\n      var clearResult = window.confirm(TRANSLATED.CLEAR_WARNING);\n      if (clearResult){\n        $evaluationStore.reset();\n        $interacted = false;\n        navigate($routes.SCOPE.path, { replace: true });\n      }\n     } else{\n      $evaluationStore.reset();\n      navigate($routes.SCOPE.path, { replace: true });\n    }\n  }\n\n  function dismissPreviousVersionMessage() {\n    previousVersionMsgDismissed.update(() => true);\n    localStorage.setItem('previousVersionMsgDismissed', 'true');\n  }\n</script>\n\n<style>\n  .getting-started__intro {\n    font-size: 130%;\n    max-width: 42em;\n    margin: 0;\n  }\n  .getting-started__buttons {\n    text-align: center;\n    padding: 1em;\n  }\n  :global(.getting-started__buttons .Button),\n  :global(.getting-started__buttons .File) {\n    margin: .25em;\n  }\n  :global(.getting-started + .excol-all) {\n    margin: 3em 0 -1em 0;\n  }\n  @media (min-width: 45em) {\n    .getting-started {\n      display: grid;\n      grid-template-columns: 1fr auto;\n      gap: 2em;\n    }\n    .getting-started__buttons {\n      padding: 0;\n      align-self: center;\n    }\n  }\n</style>",
    "<div class=\"Auditor\">\n  <AuditorFilter />\n\n  <div class=\"Auditor__Assertions\">\n    <AuditorView criteria=\"{filteredCriteria}\" />\n  </div>\n</div>\n\n<style>\n  .Auditor {\n    clear: both;\n  }\n\n  .Auditor__Assertions {\n    grid-column: 2 / 8;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  :global(.Auditor__Assertions details:first-of-type h2:first-of-type) {\n    margin-top: 0;\n  }\n\n  :global(.Auditor__Assertions > *:not(:last-child)) {\n    margin-bottom: 1rem;\n  }\n\n  :global(.Auditor__Assertions details details) {\n    padding-left: 0;\n  }\n\n  :global(.Auditor__Assertions details details details) {\n    padding-left: 32px;\n  }\n\n  @media (min-width: 60rem) {\n    .Auditor {\n      display: grid;\n      grid-template-columns:\n        [left-start] minmax(auto, 12.5em)\n        [left-end content-start] 1.25fr\n        [content-end];\n      grid-gap: 32px;\n    }\n  }\n</style>\n\n<script> \n  import { getContext } from 'svelte';\n\n  import { auditFilter } from '@app/stores/auditStore.js';\n  import { CONFORMANCE_LEVELS, scopedWcagVersions } from '@app/stores/wcagStore.js';\n\n  import AuditorFilter from './AuditorFilter.svelte';\n  import AuditorView from './AuditorView.svelte';\n\n  const { scopeStore } = getContext('app');\n  import { CriteriaFiltered } from '@app/stores/filteredCriteriaStore.js';\n\n  if ($auditFilter['VERSION']) {\n    $auditFilter['VERSION'] = [...$scopedWcagVersions].reverse().join();\n    $auditFilter['LEVEL'] = CONFORMANCE_LEVELS.filter(\n      (level) => $scopeStore['CONFORMANCE_TARGET'].indexOf(level) >= 0\n    );\n  }\n\n  $: filteredCriteria = $CriteriaFiltered\n    // Filter by version\n    .filter((criterion) => {\n      const filterVersions = $auditFilter['VERSION'];\n\n      // Pass filtering if not enabled\n      if (filterVersions.length === 0) {\n        return true;\n      }\n\n      return filterVersions.indexOf(criterion.version) >= 0;\n    })\n    // Filter by conformance level\n    .filter((criterion) => {\n      const filterLevels = $auditFilter['LEVEL'];\n\n      // Pass filtering if not enabled\n      if (filterLevels.length === 0) {\n        return true;\n      }\n\n      return filterLevels.indexOf(criterion.conformanceLevel) >= 0;\n    });\n\n</script>\n",
    "<div class=\"AuditorImport\">\n  <span class=\"AuditorImport__beta\">Beta</span>\n  <p>{@html TRANSLATED.IMPORT_DATA_INTRO}\n    <a href=\"https://github.com/w3c/wai-wcag-em-report-tool/wiki/How-to-use-the-%E2%80%9CAdd-data-from-other-(automated)-tests%E2%80%9D-functionality\" class=\"more-info\" title={TRANSLATED.MORE_INFO}>\n      <span aria-hidden=\"true\" class=\"more-info__icon\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 450\">\n<path fill=\"currentColor\" d=\"M256 344v-40c0-4.5-3.5-8-8-8h-24v-128c0-4.5-3.5-8-8-8h-80c-4.5 0-8 3.5-8 8v40c0 4.5 3.5 8 8 8h24v80h-24c-4.5 0-8 3.5-8 8v40c0 4.5 3.5 8 8 8h112c4.5 0 8-3.5 8-8zM224 120v-40c0-4.5-3.5-8-8-8h-48c-4.5 0-8 3.5-8 8v40c0 4.5 3.5 8 8 8h48c4.5 0 8-3.5 8-8zM384 224c0 106-86 192-192 192s-192-86-192-192 86-192 192-192 192 86 192 192z\"></path>\n        </svg>\n     </span>\n     <span class=\"visuallyhidden\">{TRANSLATED.MORE_INFO}</span>\n    </a>\n  </p>\n  <File\n    id=\"import__assertions\"\n    label=\"{TRANSLATED.BUTTON}\"\n    labelsub=\"({TRANSLATED.BUTTON_HINT})\"\n    on:change=\"{handleChange}\"\n    on:click={handleClick}\n  />\n</div>\n\n<style>\n  a.more-info,\n  a.more-info:visited {\n    color: var(--light-blue);\n    margin-left: .25em;\n    font-size: .8rem;\n  }\n  a.more-info:hover {\n    color: var(--ocean);\n  }\n  .more-info__icon {\n    display: inline-block;\n    vertical-align: middle;\n  }\n  .more-info__icon svg {\n    height: 1.5em;\n  }\n  .AuditorImport {\n    margin: 1em 0 1em;\n    border: 1px solid var(--line-grey);\n    padding: 1em;\n    font-size: 90%;\n    position: relative;\n  }\n    .AuditorImport p:first-child {\n      margin-top: 0;\n    }\n    .AuditorImport__beta {\n      background-color: var(--cloudy);\n      text-transform: uppercase;\n      letter-spacing: 0.05em;\n      padding: .25em .5em;\n      position: absolute;\n      top: -1em;\n      left: 1em;\n      transform: rotate(-1deg);\n      font-size: 90%;\n      display: inline-block;\n    }\n  @media (min-width: 47.5em) {\n    .AuditorImport {\n      float: right;\n      margin: 0 0 1em 2em;\n      padding: 1em;\n      text-align: center;\n      max-width: 10em;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { IMPORT_ERROR, JSONLD_ERROR } from '@app/data/errors.json';\n  import { importAssertions } from '@app/stores/earl/assertionStore/index.js';\n  import File, { readFile } from '@app/components/form/File.svelte';\n\n  const { translate } = getContext('app');\n\n  $: TRANSLATED = {\n    BUTTON: $translate('UI.NAV.MENU_IMPORT', { default: 'Import data' }),\n    BUTTON_HINT: $translate('UI.NAV.MENU_IMPORT_HINT'),\n    IMPORT_DATA_INTRO: $translate('PAGES.AUDIT.IMPORT_DATA_INTRO'),\n    JSONLD_SYNTAX: $translate('UI.IMPORT.ERROR.JSONLD_SYNTAX'),\n    NO_ASSERTIONS: $translate('UI.IMPORT.ERROR.NO_ASSERTIONS'),\n    NO_COMPATIBLE_ASSERTIONS: $translate('UI.IMPORT.ERROR.NO_COMPATIBLE_ASSERTIONS'),\n    ERROR_DEFAULT: $translate('UI.COMMON.ERROR.DEFAULT'),\n    IMPORT_SUCCESSFUL: $translate('UI.IMPORT.SUCCESSFUL'),\n    FILE_ERROR: $translate('UI.IMPORT.ERROR.FILE_ERROR'),\n    MORE_INFO: $translate('UI.IMPORT.MORE_INFO')\n  };\n\n  function handleClick (event) {\n    event.target.value = ''\n  }\n\n  function handleChange(event) {\n    const { target } = event;\n    const file = event.target.files[0];\n\n    readFile(file, (result) => {\n      let json;\n\n      try {\n        console.log(TRANSLATED.FILE_ERROR);\n        json = JSON.parse(result);\n      } catch (error) {\n        console.error(error.message);\n        let errorMessage = TRANSLATED.FILE_ERROR;\n        alert(`Import failed:\\n${errorMessage}`);\n        return;\n      }\n\n      importAssertions(json)\n        .then((imported) => {\n          const criteria = Object.keys(imported)\n            .map((num) => `– ${num}`)\n            .join('\\n');\n\n          alert(`Import successful:\\n${TRANSLATED.IMPORT_SUCCESSFUL}.`);\n        })\n        .catch((error) => {\n          console.error(error);\n          let errorMessage;\n\n          switch (error.message) {\n            case JSONLD_ERROR.SYNTAX:\n              errorMessage = 'TRANSLATED.JSONLD_SYNTAX';\n              break;\n\n            case IMPORT_ERROR.NO_ASSERTIONS:\n              errorMessage = 'TRANSLATED.NO_ASSERTIONS';\n              break;\n\n            case IMPORT_ERROR.NO_COMPATIBLE_ASSERTIONS:\n              errorMessage = TRANSLATED.NO_COMPATIBLE_ASSERTIONS;\n              break;\n\n            default:\n              errorMessage = TRANSLATED.ERROR_DEFAULT;\n          }\n\n          alert(`Import failed:\\n${errorMessage}`);\n        })\n        .finally(() => {\n          target.value = '';\n        });\n    });\n  }\n</script>\n",
    "{#if fake}\n  <span class=\"{classNames}\"><slot /></span>\n{:else}\n  <button type=\"button\" class=\"{classNames}\" on:click>\n    <slot />\n  </button>\n{/if}\n\n<style>\n  .Button {\n    box-sizing: border-box;\n    min-width: 1.5rem;\n  }\n</style>\n\n<script>\n  export let type = 'primary';\n  export let fake = false;\n  export let small = false;\n\n  let classNames = [\n    'Button',\n    `Button--${type}`,\n    small ? 'Button--small' : '',\n    'button',\n    `button-${type}`,\n    small ? 'button-small' : ''\n  ].join(' ');\n</script>\n",
    "<!--\n * @component\n * LanguageSelect\n * -->\n<div class=\"LanguageSelect\">\n  {#if !collapsed}\n    <span class=\"LanguageSelect__languages_container languagelist\">\n      <strong id=\"LanguageSelect__label\">{LABEL_TRANSLATIONS}:</strong>\n      <ul\n        class=\"LanguageSelect__languages languagelistul\"\n        on:click=\"{handleClick}\"\n      >\n        {#each locales as appLocale}\n          <li\n            class=\"LanguageSelect__language {appLocale === currentLocale ? 'language__item--current' : ''}\"\n          >\n            {#if appLocale === currentLocale}\n              <strong>{currentLocale.title}</strong>\n            {:else}\n              <a\n                lang=\"{appLocale.lang}\"\n                href=\"#{appLocale.lang}\"\n              >{appLocale.title}</a>\n            {/if}\n          </li>\n        {/each}\n      </ul>\n    </span>\n  {/if}\n  <span class=\"LanguageSelect__toggle\">\n    <button\n      id=\"showoptions\"\n      on:click=\"{handleToggle}\"\n      type=\"button\"\n      class=\"button-inline showhidebutton\"\n      aria-expanded=\"{!collapsed}\"\n    >\n      <svg aria-hidden=\"true\" class=\"icon-languages\"><use\n          xlink:href={`${$basepath}/images/icons.svg#icon-languages`}\n        ></use></svg>\n      <span>\n        {#if collapsed}\n          {BUTTON_SHOW_TRANSLATIONS}\n        {:else}{BUTTON_HIDE_TRANSLATIONS}{/if}\n      </span>\n    </button>\n  </span>\n</div>\n<!-- /component -->\n\n<style>\n  .LanguageSelect {\n    grid-column: 2 / 10;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-end;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  .LanguageSelect > *:not(:first-child) {\n    margin-left: 0.5rem;\n    padding-left: 0.5rem;\n    border-left: solid 1px var(--w3c-classic);\n  }\n</style>\n\n<script>\n  import { t as translate, locale } from 'svelte-i18n';\n  import { basepath } from '@app/stores/appStore.js';\n\n  export let locales = [];\n\n  let collapsed = false;\n\n  $: currentLocale = locales.find((l) => l.lang === $locale);\n\n  // translations\n  $: TRANSLATIONS = $translate('UI.COMMON.BUTTON.LANGUAGE_SELECT');\n\n  $: BUTTON_SHOW_TRANSLATIONS = $translate('UI.COMMON.BUTTON.SHOW', {\n    values: {\n      subject: TRANSLATIONS\n    }\n  });\n\n  $: BUTTON_HIDE_TRANSLATIONS = $translate('UI.COMMON.BUTTON.HIDE', {\n    values: {\n      subject: TRANSLATIONS\n    }\n  });\n\n  $: LABEL_TRANSLATIONS = $translate('UI.COMMON.LABEL.LANGUAGE_SELECT');\n\n  function handleClick(event) {\n    const target = event.target;\n\n    if (\n      target.nodeName === 'A' &&\n      locales.some((l) => l.lang === target.lang)\n    ) {\n      event.preventDefault();\n\n      // This line is what makes the App translate to another language\n      locale.set(target.lang);\n    }\n  }\n\n  function handleToggle() {\n    collapsed = !collapsed;\n  }\n</script>\n",
    "<!--\n * @component\n *   NavigationBar\n *  -->\n<nav class=\"Nav default-grid\">\n  <ol class=\"Nav__Itemcontainer\">\n    {#each navigationItems as navigationItem}\n      <li\n        class=\"nav__item\"\n        class:current=\"{navigationItem.path === currentPath}\"\n      >\n        <Link to=\"{navigationItem.path}\">{navigationItem.title}</Link>\n      </li>\n    {/each}\n  </ol>\n</nav>\n<!-- /component -->\n\n<style>\n  .Nav {\n    background-color: #d0e1f1;\n    background-color: var(--cloudy-subtle);\n  }\n\n  .Nav__Itemcontainer {\n    grid-column: 2 / 10;\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow-x: auto;\n  }\n\n  .nav__item.current {\n    background-color: #fff;\n  }\n\n  @media (min-width: 40.1em) {\n    .Nav__Itemcontainer {\n      flex-direction: row;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { Link, useLocation } from 'svelte-navigator';\n\n  const { translate } = getContext('app');\n\n  $: navigationItems = [\n    {\n      path: '/',\n      title: $translate('UI.NAV.WZRD_START')\n    },\n    {\n      path: '/evaluation/define-scope',\n      title: $translate('UI.NAV.WZRD_SCOPE')\n    },\n    {\n      path: '/evaluation/explore-website',\n      title: $translate('UI.NAV.WZRD_EXPLORE')\n    },\n    {\n      path: '/evaluation/select-sample',\n      title: $translate('UI.NAV.WZRD_SAMPLE')\n    },\n    {\n      path: '/evaluation/audit-sample',\n      title: $translate('UI.NAV.WZRD_AUDIT')\n    },\n    {\n      path: '/evaluation/report-findings',\n      title: $translate('UI.NAV.WZRD_REPORT')\n    },\n    {\n      path: '/evaluation/view-report',\n      title: $translate('UI.NAV.WZRD_VIEWREPORT')\n    }\n  ];\n\n  const location = useLocation();\n\n  $: currentPath = $location.pathname;\n</script>\n",
    "<svelte:head>\n  <title>{title} | WCAG-EM Report Tool</title>\n</svelte:head>\n\n<div class=\"page-content\" id=\"{pageid}\">\n{#if needsPanelSpace}\n  <div class=\"default-grid\">\n    <main class=\"main-with-panel\">\n      <h1>{title}</h1>\n      <slot />\n    </main>\n    <YourReport />\n  </div>\n{:else}\n  <div class=\"default-grid\">\n    <main class=\"main-without-panel\">\n      {#if !isViewReport && !isOverview && !isAcknowledgements}\n      <YourReport />\n      {/if}\n      <h1>{title}</h1>\n      <slot />\n    </main>\n  </div>\n{/if}\n</div>\n\n<style>\n  .page-content {\n    padding: 2em 0;\n  }\n  .main-with-panel {\n    grid-column: 2 / 8;\n  }\n  .main-without-panel {\n    grid-column: 2 / 10;\n  }\n  :global(main > *:not(:last-child)) {\n    margin-bottom: 1em;\n  }\n</style>\n\n<script>\n  import { onMount } from \"svelte\";\n  import { useLocation } from 'svelte-navigator';\n  import { honourFragmentIdLinks } from '@app/scripts/honourFragmentIdLinks.js';\n\n  import { routes, yourReportPanelOpen } from '@app/stores/appStore.js';\n\n  import YourReport from '@app/components/ui/YourReport.svelte';\n\n  const location = useLocation();\n\n  export let pageid;\n\n  $: isViewReport = $location.pathname === $routes.VIEW_REPORT.path;\n  $: isOverview = $location.pathname === $routes.OVERVIEW.path;\n  $: isAcknowledgements = $location.pathname === $routes.ACKNOWLEDGEMENTS.path;\n  $: needsPanelSpace = !isViewReport && !isOverview && !isAcknowledgements && $yourReportPanelOpen;\n\n  onMount(() => {\n    setTimeout(honourFragmentIdLinks($location), 100);\n  });\n\n  export let title;\n</script>\n",
    "<!--\n * @component\n *   Pager\n *\n * -->\n<div class=\"default-grid\">\n  <aside class=\"Pager pager\" aria-label={TRANSLATED.PREVIOUSNEXT}>\n    <ul>\n      {#if previousPage}\n        <li class=\"Pager__Item pager--item previous\">\n          <Link to=\"{previousPage.path}\">\n            <svg aria-hidden=\"true\" class=\"pager--item-icon icon-arrow-left\">\n              <use\n                xlink:href={`${$basepath}/images/icons.svg#icon-arrow-left`}\n              ></use>\n            </svg>\n            <span class=\"pager--item-text\">\n              <span\n                class=\"pager--item-text-direction\"\n              >{TRANSLATED.PREVIOUS}</span>\n              <span class=\"pager--item-text-target\">{previousPage.title}</span>\n            </span>\n          </Link>\n        </li>\n      {/if}\n\n      {#if nextPage}\n        <li class=\"Pager__Item pager--item next\">\n          <Link to=\"{nextPage.path}\">\n            <svg aria-hidden=\"true\" class=\"pager--item-icon icon-arrow-right\">\n              <use\n                xlink:href=\n                {`${$basepath}/images/icons.svg#icon-arrow-right`}\n              ></use></svg>\n            <span class=\"pager--item-text\">\n              <span class=\"pager--item-text-direction\">{TRANSLATED.NEXT}</span>\n              <span class=\"pager--item-text-target\">{nextPage.title}</span>\n            </span>\n          </Link>\n        </li>\n      {/if}\n    </ul>\n  </aside>\n</div>\n<!-- /component -->\n\n<style>\n  .Pager {\n    grid-column: 2 / 10;\n  }\n  :global(.app-container .pager--item) {\n    max-width: none;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { Link, useLocation } from 'svelte-navigator';\n  import { basepath } from '@app/stores/appStore.js';\n\n  export let label = 'page';\n  export let context = [];\n\n  const { translate } = getContext('app');\n\n  $: TRANSLATED = {\n    PREVIOUSNEXT: $translate('UI.COMMON.PREVIOUSNEXT'),\n    NEXT: $translate('UI.COMMON.NEXT', {\n      default: 'Next {label}',\n      values: { label }\n    }),\n    PREVIOUS: $translate('UI.COMMON.PREVIOUS', {\n      default: 'Previous {label}',\n      values: { label }\n    })\n  };\n\n  $: indexedContext = context.map((page, index) => {\n    return {\n      path: page.path || '/',\n      title: page.title || '',\n      index\n    };\n  });\n\n  $: pageCount = indexedContext.length;\n  let location = useLocation();\n\n  $: currentPage = indexedContext.find(\n    (page) => page.path === $location.pathname\n  );\n  $: currentPageIndex = currentPage ? currentPage.index : null;\n\n  $: previousPage =\n    currentPageIndex > 0 && indexedContext[currentPageIndex - 1];\n  $: nextPage =\n    currentPageIndex < pageCount - 1 && indexedContext[currentPageIndex + 1];\n</script>\n",
    "<aside class=\"Panel your-report\" class:your-report--expanded=\"{$yourReportPanelOpen}\" class:your-report--collapsed=\"{!$yourReportPanelOpen}\">\n  {#if $yourReportPanelOpen}\n  <h2 class=\"Panel__Header__heading your-report__heading\">\n    {#if subtitle}\n    <div>\n      <span class=\"your-report__heading-pre\">{subtitle}</span>\n      {title}\n    </div>\n    {:else}\n      {title}\n    {/if}\n\n    <button\n      type=\"button\"\n      class=\"button-secondary button-small your-report__showhide\"\n      on:click={toggle}\n      aria-expanded=\"{$yourReportPanelOpen}\"\n    >\n      {@html TRANSLATED.SHOW_HIDE}\n      <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <polyline points=\"9 18 15 12 9 6\"></polyline>\n    </svg>\n    </button>\n  </h2>\n\n  <slot />\n\n  {:else}\n    <button\n      type=\"button\"\n      class=\"button-secondary button-small your-report__showhide\"\n      on:click={toggle}\n      aria-expanded=\"{$yourReportPanelOpen}\"\n    >\n      <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <polyline points=\"15 18 9 12 15 6\"></polyline>\n      </svg>\n      {@html TRANSLATED.SHOW_HIDE}\n    </button>\n  {/if}\n</aside>\n\n<style>\n.your-report {\n  position: sticky;\n  top: 1em;\n  grid-row-start: 1;\n}\n:global(#report-findings .your-report {\n  position: static;\n})\n.your-report__heading-pre {\n  font-size: smaller;\n  display: block;\n}\n.your-report__showhide[aria-expanded=\"false\"] svg {\n  margin-right: .25em;\n  margin-left: 0;\n}\n.your-report--collapsed {\n  float: right;\n  position: static;\n}\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { yourReportPanelOpen } from '@app/stores/appStore.js';\n\n  export let title = null;\n  export let subtitle = null;\n\n  const { translate } = getContext('app');\n\n  $: fullTitle = subtitle ? `${subtitle} ${title}` : title;\n\n  $: TRANSLATED = {\n    SHOW_HIDE: $yourReportPanelOpen\n      ? $translate('UI.COMMON.BUTTON.HIDE', {\n          default: 'Hide {subject}',\n          values: { subject: `<span class=\"visuallyhidden\">${fullTitle || ''}</span>` }\n        })\n      : $translate('UI.COMMON.BUTTON.SHOW', {\n          default: 'Show {subject}',\n          values: { subject: fullTitle || '' }\n        })\n  };\n\n  function toggle() {\n    yourReportPanelOpen.set(!$yourReportPanelOpen);\n  }\n</script>\n",
    "<!--\n * @component\n *   Report\n * -->\n<div tabindex=\"-1\" bind:this={sectionAbout}>\n  <h2>{TRANSLATED.HEADING_ABOUT}</h2>\n  <dl>\n\n    <dt>\n      <ReportHeaderKey editing={editAbout} field=\"EVALUATION_CREATOR\">\n        {TRANSLATED.LABEL_EVALUATOR}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderValue editing={editAbout} field=\"EVALUATION_CREATOR\" store=\"summaryStore\"></ReportHeaderValue>\n    </dd>\n\n    <dt>\n      <ReportHeaderKey editing={editAbout} field=\"EVALUATION_COMMISSIONER\">\n        {TRANSLATED.LABEL_COMMISSIONER}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderValue editing={editAbout} field=\"EVALUATION_COMMISSIONER\" store=\"summaryStore\" />\n    </dd>\n\n    <dt>\n      <ReportHeaderKey editing={editAbout} field=\"EVALUATION_DATE\">\n        {TRANSLATED.LABEL_DATE}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderValue editing={editAbout} field=\"EVALUATION_DATE\" store=\"summaryStore\" />\n    </dd>\n  </dl>\n\n  {#if editAbout}\n  <button class=\"button button-secondary\" on:click={toggleEditAbout}>\n    {TRANSLATED.BUTTON_SAVE}  \n    <span class=\"visually-hidden\">{TRANSLATED.HEADING_ABOUT}</span>\n  </button>\n  {:else}\n  <button class=\"button button-secondary\" on:click={toggleEditAbout}>\n    {TRANSLATED.BUTTON_EDIT} \n    <span class=\"visually-hidden\">{TRANSLATED.HEADING_ABOUT}</span>\n  </button>\n  {/if}\n</div>\n\n<div tabindex=\"-1\" bind:this={sectionExecutiveSummary}>\n  <h2>{TRANSLATED.HEADING_SUMMARY}</h2>\n  {#if editExecutiveSummary}\n    <div>\n      <ReportHeaderValue \n        editing={editExecutiveSummary} \n        multiline={true} \n        field=\"EVALUATION_SUMMARY\" \n        store=\"summaryStore\">\n      </ReportHeaderValue>\n    </div>\n    <button class=\"button button-secondary\" on:click={toggleEditExecutiveSummary}>\n      {TRANSLATED.BUTTON_SAVE} \n      <span class=\"visually-hidden\">{TRANSLATED.HEADING_SUMMARY}</span>\n    </button>  \n  {:else}\n    <div>\n    {#if $summaryStore['EVALUATION_SUMMARY']}\n     {@html marked($summaryStore['EVALUATION_SUMMARY'])}\n    {:else}\n      <span class=\"no-result\">{TRANSLATED.LABEL_NOT_PROVIDED}</span>\n    {/if}\n    </div>\n    <button class=\"button button-secondary\" on:click={toggleEditExecutiveSummary}>\n      {TRANSLATED.BUTTON_EDIT} \n      <span class=\"visually-hidden\">{TRANSLATED.HEADING_SUMMARY}</span>\n    </button>\n  {/if}\n</div>\n\n<div tabindex=\"-1\" bind:this={sectionEvaluationScope}>\n  <h2>{TRANSLATED.HEADING_SCOPE}</h2>\n  <dl>\n    <dt>\n      <ReportHeaderKey editing={editEvaluationScope} field=\"SITE_NAME\">\n        {TRANSLATED.LABEL_WEBSITE_NAME}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderValue editing={editEvaluationScope} field=\"SITE_NAME\" store=\"scopeStore\" />\n    </dd>\n\n    <dt>\n      <ReportHeaderKey editing={editEvaluationScope} field=\"WEBSITE_SCOPE\">\n        {TRANSLATED.LABEL_WEBSITE_SCOPE}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderValue editing={editEvaluationScope} field=\"WEBSITE_SCOPE\" store=\"scopeStore\" multiline={true} />\n    </dd>\n\n    <dt>\n      <ReportHeaderKey editing={editEvaluationScope} field=\"WCAG_VERSION\">\n        {TRANSLATED.LABEL_WCAG_VERSION}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderMultiValue editing={editEvaluationScope} field=\"WCAG_VERSION\" store=\"scopeStore\" options={wcagVersions}></ReportHeaderMultiValue>\n    </dd>\n\n    <dt>\n      <ReportHeaderKey editing={editEvaluationScope} field=\"CONFORMANCE_TARGET\">\n        {TRANSLATED.LABEL_CONFORMANCE_TARGET}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderMultiValue editing={editEvaluationScope} field=\"CONFORMANCE_TARGET\" store=\"scopeStore\" options={conformanceLevels}></ReportHeaderMultiValue>\n    </dd>\n\n    <dt>\n      <ReportHeaderKey editing={editEvaluationScope} field=\"AS_BASELINE\">\n        {TRANSLATED.LABEL_ACCESSIBILITY_SUPPORT_BASELINE}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderValue editing={editEvaluationScope} field=\"AS_BASELINE\" store=\"scopeStore\" multiline={true} />\n    </dd>\n\n    <dt>\n      <ReportHeaderKey editing={editEvaluationScope} field=\"ADDITIONAL_REQUIREMENTS\">\n        {TRANSLATED.LABEL_EXTRA_REQUIREMENTS}\n      </ReportHeaderKey>\n    </dt>\n    <dd>\n      <ReportHeaderValue editing={editEvaluationScope} field=\"ADDITIONAL_REQUIREMENTS\" store=\"scopeStore\" multiline={true} />\n    </dd>\n  </dl>\n\n  {#if editEvaluationScope}\n  <button class=\"button button-secondary\" on:click={toggleEditEvaluationScope}>\n    {TRANSLATED.BUTTON_SAVE}  \n    <span class=\"visually-hidden\">{TRANSLATED.HEADING_SCOPE}</span>\n  </button>\n  {:else}\n  <button class=\"button button-secondary\" on:click={toggleEditEvaluationScope}>\n    {TRANSLATED.BUTTON_EDIT}  \n    <span class=\"visually-hidden\">{TRANSLATED.HEADING_SCOPE}</span>\n  </button>\n  {/if}\n</div>\n\n<h2>{TRANSLATED.HEADING_AUDIT_RESULTS_DETAIL}</h2>\n\n<h3>{TRANSLATED.SUMMARY}</h3>\n<ReportSummary />\n\n<h3>{TRANSLATED.ALL_RESULTS}</h3>\n<ReportAllResults criteria=\"{$wcag}\" />\n\n<h2>{TRANSLATED.HEADING_SAMPLE}</h2>\n{#if report.samples.length > 0}\n  <ol>\n    {#each report.samples as sample}\n      <li>\n        <span>{sample.title}</span> - <span>{sample.description}</span>\n      </li>\n    {/each}\n  </ol>\n{:else}\n  <p>{TRANSLATED.TEXT_NO_SAMPLE}</p>\n{/if}\n\n<h2>{TRANSLATED.LABEL_TECH}</h2>\n{#if report.tech != \"\"}\n  <p>{report.tech}</p>\n{:else}\n  <p>{TRANSLATED.LABEL_NOT_PROVIDED}</p>\n{/if}\n\n<h2>{TRANSLATED.HEADING_SPECIFICS}</h2>\n<p>{@html marked(report.specifics) || TRANSLATED.LABEL_NOT_PROVIDED}</p>\n\n<h2 class='strip'>{TRANSLATED.HEADING_RESOURCES}</h2>\n<ul class='strip'>\n  <li><a href=\"https://www.w3.org/WAI/intro/wcag\">Web Content Accessibility Guidelines (WCAG)\n    Overview</a></li>\n  <li><a href=\"https://www.w3.org/WAI/WCAG21/quickref/\">How to Meet WCAG 2.1 Quick Reference</a></li>\n  <li><a href=\"https://www.w3.org/WAI/eval/conformance\">WCAG Evaluation Methodology (WCAG-EM)\n    Overview</a></li>\n</ul>\n<!-- /component -->\n\n<style>\n  dt {\n    grid-column: 1 / 2;\n    margin-top: 0;\n    font-weight: normal;\n  }\n  dt:after {\n    content: \":\";\n  }\n  dd {\n    font-weight: bold;\n    margin-left: 0;\n    margin-bottom: 1em;\n    grid-column: 2 / 3;\n  }\n  @media (min-width: 40em) {\n    dl {\n      display: grid;\n      grid-template-columns: auto 2fr;\n      gap: 0.5em 1em;\n    }\n    dd {\n      margin-bottom: 0;\n    }\n  }\n  .no-result {\n    font-weight: normal;\n    font-style: italic;\n    margin-bottom: 1em;\n    display: block;\n  }\n  </style>\n\n<script>\n  import { getContext } from 'svelte';\n  import marked from \"marked\";\n\n  import { wcag, CONFORMANCE_LEVELS, WCAG_VERSIONS } from '@app/stores/wcagStore.js';\n\n  import ReportAllResults from '@app/components/ui/Report/ReportAllResults.svelte';\n  import ReportHeaderKey from '@app/components/ui/Report/ReportHeaderKey.svelte';\n  import ReportHeaderValue from '@app/components/ui/Report/ReportHeaderValue.svelte';\n  import ReportHeaderMultiValue from '@app/components/ui/Report/ReportHeaderMultiValue.svelte';\n  import ReportSummary from './Report/ReportSummary.svelte';\n  import evaluationStore from '@app/stores/evaluationStore.js';\n\n  const { sampleStore, summaryStore, exploreStore, translate } = getContext(\n    'app'\n  );\n\n  let editAbout = false;\n  let editExecutiveSummary = false;\n  let editEvaluationScope = false;\n  let sectionAbout, sectionEvaluationScope, sectionExecutiveSummary;\n\n  $: TRANSLATED = {\n    LABEL_EVALUATOR: $translate('UI.REPORT.BY'),\n    LABEL_COMMISSIONER: $translate('UI.REPORT.COMMISION_BY'),\n    LABEL_NOT_PROVIDED: $translate('UI.REPORT.LABEL_NOT_PROVIDED'),\n    LABEL_DATE: $translate('PAGES.SUMMARY.LABEL_DATE'),\n    BUTTON_SAVE: $translate('UI.REPORT.SAVE'),\n    BUTTON_EDIT: $translate('UI.REPORT.EDIT'),\n    HEADING_ABOUT: $translate('UI.REPORT.HD_ABOUT'),\n    HEADING_SUMMARY: $translate('UI.REPORT.HD_SUMMARY'),\n    HEADING_SCOPE: $translate('UI.REPORT.HD_SCOPE'),\n    LABEL_WEBSITE_NAME: $translate('PAGES.SCOPE.LABEL_SITE_NAME'),\n    LABEL_WEBSITE_SCOPE: $translate('PAGES.SCOPE.LABEL_SITE_SCOPE'),\n    LABEL_WCAG_VERSION: $translate('PAGES.SCOPE.LABEL_WCAG_VERSION'),\n    LABEL_CONFORMANCE_TARGET: $translate('PAGES.SCOPE.LABEL_CONFORMANCE_TGT'),\n    LABEL_EXTRA_REQUIREMENTS: $translate('PAGES.SCOPE.LABEL_EXTRA_REQUIREMENTS'),\n    LABEL_ACCESSIBILITY_SUPPORT_BASELINE: $translate('PAGES.SCOPE.LABEL_SUPPORT_BASE'),\n    HEADING_AUDIT_RESULTS_OVERVIEW: $translate('UI.REPORT.HD_SCORE'),\n    HEADING_AUDIT_RESULTS_DETAIL: $translate('UI.REPORT.HD_CRITERIA_REPORT'),\n    HEADING_SAMPLE: $translate('UI.REPORT.HD_SAMPLE'),\n    HEADING_SPECIFICS: $translate('UI.REPORT.HD_SPECIFICS'),\n    HEADING_RESOURCES: $translate('UI.REPORT.HD_DOCS'),\n    CONFORMANCE_LEVEL: $translate('WCAG.COMMON.CONFORMANCE_LEVEL'),\n    TEXT_NO_SAMPLE: $translate('PAGES.AUDIT.NO_SAMPLE'),\n    SUMMARY: $translate('UI.REPORT.SUMMARY'),\n    ALL_RESULTS: $translate('UI.REPORT.ALL_RESULTS'),\n    LABEL_TECH: $translate('PAGES.EXPLORE.LABEL_TECH')\n  };\n\n  $: report = {\n    commissioner: $summaryStore['EVALUATION_COMMISSIONER'],\n    creator: $summaryStore['EVALUATION_CREATOR'],\n    date: $summaryStore['EVALUATION_DATE'],\n    samples: [\n      ...$sampleStore['STRUCTURED_SAMPLE'],\n      ...$sampleStore['RANDOM_SAMPLE']\n    ],\n    specifics: $summaryStore['EVALUATION_SPECIFICS'],\n    summary: $summaryStore['EVALUATION_SUMMARY'],\n    title: $summaryStore['EVALUATION_TITLE'] || $translate('PAGES.REPORT.TITLE'),\n    tech: $exploreStore['TECHNOLOGIES_RELIED_UPON']\n  };\n\n  let wcagVersions = [...WCAG_VERSIONS].reverse().map((version) => {\n    return {\n      title: `WCAG ${version}`,\n      value: version\n    };\n  });\n\n  $: conformanceLevels = CONFORMANCE_LEVELS.map((level) => {\n    return {\n      title: `${TRANSLATED.CONFORMANCE_LEVEL} ${level}`,\n      value: level\n    };\n  });\n\n  function toggleEditAbout() {\n    editAbout = !editAbout;\n    sectionAbout.focus();\n  }\n\n  function toggleEditExecutiveSummary() {\n    editExecutiveSummary = !editExecutiveSummary;\n    sectionExecutiveSummary.focus();\n  }\n\n  function toggleEditEvaluationScope() {\n    editEvaluationScope = !editEvaluationScope;\n    sectionEvaluationScope.focus();\n  }\n</script>\n",
    "{#each principles as principle}\n  <h4>{principle} {TRANSLATED.PRINCIPLES[principle].TITLE}</h4>\n\n  {#each guidelines.filter((g) => g.indexOf(principle) === 0) as guideline}\n    <h5 id={`guideline-${guideline.replace('.', '')}`}>{guideline} {TRANSLATED.GUIDELINES[guideline].TITLE}</h5>\n    <table class=\"Auditor__ResultsTable\" aria-labelledby={`guideline-${guideline.replace('.', '')}`}>\n      <tbody>\n          <tr class=\"Auditor__ResultsTableHeader\">\n            <th scope=\"col\">{TRANSLATED.HEADER_SUCCESS_CRITERION}</th>\n            <th scope=\"col\">{TRANSLATED.HEADER_RESULT}</th>\n            <th scope=\"col\">{TRANSLATED.HEADER_OBSERVATIONS}</th>\n            <th scope=\"col\" class=\"strip\">{TRANSLATED.EDIT}</th>\n          </tr>\n        <!--\n        * Should filter assertions based on test prop;\n        * assertion.test.num in case of wcag.\n        * Specificly test.num.indexOf guideline === 0\n        * because we are grouping per principle > guideline.\n        * -->\n        {#each guidelineCriteria(guideline) as criterion (criterion.num)}\n          <tr class=\"Auditor__Assertion\">\n            <th scope=\"row\" class=\"Auditor__Assertion-SC\" id={`criterion-${criterion.num.replaceAll('.', '')}`}>{criterion.num}: {TRANSLATED.CRITERIA[criterion.num].TITLE}</th>\n            <td>\n                {#each scopeAssertion(criterion) as assertion}\n                  {#if sampleAssertions(criterion).length}\n                  <h6>{TRANSLATED.HEADING_SCOPE_RESULTS}</h6>\n                  {/if}\n                  <p>        \n                    <span class=\"results-label-mobile\">{TRANSLATED.HEADER_RESULT}:</span>\n                    {assertion.result.outcome.title || TRANSLATED.TEXT_NOT_CHECKED}</p>\n                {:else}\n                  <p>\n                    <span class=\"results-label-mobile\">{TRANSLATED.HEADER_RESULT}:</span>\n                    {TRANSLATED.TEXT_NOT_CHECKED}\n                  </p>\n                {/each}\n                {#if sampleAssertions(criterion).length}\n                  {#each sampleAssertions(criterion) as assertion}\n                    {#if assertionHasContents(assertion)}\n                    <h6>{assertion.subject.title || `Sample ${assertion.subject.ID}`}</h6>\n                    <p>\n                      <span class=\"results-label-mobile\">{TRANSLATED.HEADER_RESULT}:</span>\n                      {assertion.result.outcome.title || TRANSLATED.TEXT_NOT_CHECKED}\n                    </p>\n                    {/if}\n                  {/each}\n                {/if}\n            </td>\n            <td>\n              {#each scopeAssertion(criterion) as assertion}\n                {#if assertion.result.description}\n                  {#if sampleAssertions(criterion).length}\n                  <h6>{TRANSLATED.HEADING_SCOPE_RESULTS}</h6>\n                  {/if}\n                  <p class=\"results-label-mobile\">{TRANSLATED.LABEL_OBSERVATION}:</p>\n                  {@html marked(assertion.result.description, {\"sanitize\": true})}\n                {/if}\n              {/each}\n              {#if sampleAssertions(criterion).length}\n              {#each sampleAssertions(criterion) as assertion}\n                {#if assertionHasContents(assertion)}\n                  <h6>{assertion.subject.title || `Sample ${assertion.subject.ID}`}</h6>\n                  {#if assertion.result.description}\n                    {@html marked(assertion.result.description, {\"sanitize\": true})}\n                  {:else}\n                    <p>{TRANSLATED.NO_OBSERVATIONS_FOUND}</p>\n                  {/if}\n                {/if}\n              {/each}\n            {/if}\n            </td>\n            <td class=\"strip\">\n              <Link to={`/evaluation/audit-sample#criterion-${criterion.num.replaceAll('.','')}`}>\n                <span class=\"visuallyhidden\">Edit {criterion.num}</span>\n                <svg\n                  aria-hidden=\"true\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  class=\"feather feather-edit\">\n                  <path\n                    d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n                  <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n                </svg>\n              </Link>        \n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  {/each}\n{/each}\n\n<style>\n  .Auditor__ResultsTable {\n    width: 100%;\n  }\n  h5 {\n    color: var(--wai-green);\n    margin: 1.5em 0 1em;\n  }\n  .Auditor__ResultsTable th {\n    width: 30%;\n    position: absolute;\n    left: -9999em;\n    top: -9999em;\n  }\n  .Auditor__ResultsTable th:nth-child(2) {\n    width: 25%;\n  }\n  .Auditor__ResultsTable th:nth-child(3) {\n    width: 60%;\n  }\n  .Auditor__ResultsTableHeader {\n    position: sticky;\n    top: 0;\n  }\n  .Auditor__Assertion {\n    margin-bottom: 1em;\n    border-bottom: 1px solid var(--cloudy);\n  }\n  .Auditor__Assertion-SC {\n    font-weight: bold;\n    color: inherit;\n    background-color: inherit;\n  }\n  .Auditor__ResultsTable td {\n    display: block;\n    position: relative;\n    border-style: none;\n  }\n  @media (min-width: 60em) {\n    .Auditor__Assertion {\n      border-bottom: 0;\n    }\n    .Auditor__Assertion-SC {\n      font-weight: normal;\n    }\n    .Auditor__ResultsTable td {\n      display: table-cell;\n      border: 1px solid var(--cloudy);\n    }\n    .Auditor__ResultsTable th {\n      position: static;\n    }\n    .results-label-mobile {\n      display: none;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { Link } from 'svelte-navigator';\n  import marked from 'marked';\n\n  import { WCAG_VERSIONS } from '@app/stores/wcagStore.js';\n  import scopeStore from '@app/stores/scopeStore.js';\n  import assertions from '@app/stores/earl/assertionStore/index.js';\n  import subjects, {\n    TestSubjectTypes\n  } from '@app/stores/earl/subjectStore/index.js';\n  import { TestSubject } from '@app/stores/earl/subjectStore/models.js';\n\n  export let criteria = [];\n\n  const { translate, translateToObject } = getContext('app');\n  \n  // marked.setOptions({\n  //   sanitize: true\n  // });\n\n  $: TRANSLATED = {\n    PRINCIPLES: $translateToObject('WCAG.PRINCIPLE'),\n    GUIDELINES: $translateToObject('WCAG.GUIDELINE'),\n    CRITERIA: $translateToObject('WCAG.SUCCESS_CRITERION'),\n    LABEL_OUTCOME: $translate('PAGES.AUDIT.LABEL_OUTCOME'),\n    LABEL_OBSERVATION: $translate('PAGES.AUDIT.ASSERTION_RESULT_DESCRIPTION_LABEL'),\n    HEADING_SCOPE_RESULTS: $translate('PAGES.AUDIT.SAMPLE_FINDINGS'),\n    HEADING_RESULTS_FOR: $translate('PAGES.AUDIT.RESULTS_FOR'),\n    TEXT_NOT_CHECKED: $translate('UI.EARL.UNTESTED'),\n    HEADER_SUCCESS_CRITERION: $translate('PAGES.REPORT.HEADER_SUCCESS_CRITERION'),\n    HEADER_RESULT: $translate('PAGES.REPORT.HEADER_RESULT'),\n    HEADER_OBSERVATIONS: $translate('PAGES.REPORT.HEADER_OBSERVATIONS'),\n    NO_OBSERVATIONS_FOUND: $translate('PAGES.REPORT.NO_OBSERVATIONS_FOUND'),\n    EDIT: $translate('UI.REPORT.EDIT')\n  };\n\n  // Sets are unique values\n  $: principles = [...new Set(criteria.map((a) => a.num.split('.')[0]))];\n  $: guidelines = [\n    ...new Set(\n      criteria.map((a) => {\n        const splittedNum = a.num.split('.');\n\n        return `${splittedNum[0]}.${splittedNum[1]}`;\n      })\n    )\n  ];\n\n  function guidelineCriteria(guideline) {\n    return filterAssertions().filter(\n      (criterion) => criterion.num.indexOf(guideline) === 0\n    );\n  }\n\n  function criterionAssertions(criterion) {\n    return $assertions.filter((assertion) => {\n      return assertion.test.num === criterion.num;\n    });\n  }\n\n  function filterAssertions(){\n    return criteria.filter((criterion) => {\n      const filterVersions = WCAG_VERSIONS;\n\n      // Pass filtering if not enabled\n      if (filterVersions.length === 0) {\n        return true;\n      }\n\n      return filterVersions.indexOf(criterion.version) >= 0;\n    })\n    // Filter by conformance level\n    .filter((criterion) => {\n      const filterLevels = $scopeStore['CONFORMANCE_TARGET'];\n\n      // Pass filtering if not enabled\n      if (filterLevels.length === 0) {\n        return true;\n      }\n      return filterLevels.indexOf(criterion.conformanceLevel) >= 0;\n      });\n  }\n\n  function scopeAssertion(criterion) {\n    return criterionAssertions(criterion).filter((assertion) => {\n      return assertion.subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0;\n    });\n  }\n\n  function sampleAssertions(criterion) {\n    let sampleAssertions = criterionAssertions(criterion).filter((assertion) => {\n      return assertion.subject.type.indexOf(TestSubjectTypes.WEBPAGE) >= 0;\n    });\n    sampleAssertions.sort(sortSubjectOrder);\n    return sampleAssertions;\n  }\n\n  function sortSubjectOrder(a, b) {\n    let sortingArray = [];\n    $subjects.forEach((subject) => {\n      sortingArray.push(subject.title)\n    });\n    return sortingArray.indexOf(a.subject.title) - sortingArray.indexOf(b.subject.title);\n  }\n\n  function assertionHasContents(assertion) {\n    return (assertion.result.outcome.title && assertion.result.outcome.title !== TRANSLATED.TEXT_NOT_CHECKED) || assertion.result.description\n  }\n</script>\n",
    "{#if editing}\n<Select\nbind:value={storeToUse[field]}\nid={`evaluation-meta-edit-${field}`}\noptions={options}\n>\n</Select>\n{:else}\n{#if storeToUse[field]}\n{storeToUse[field]}\n{:else}\n<span class=\"no-result\">(Not provided)</span>\n{/if}\n{/if}\n\n<style>\n  .no-result {\n    font-weight: normal;\n    font-style: italic;\n  }\n</style>\n\n<script>\n  import Select from '@app/components/form/Select.svelte';\n  import { getContext } from 'svelte';\n\n  const { scopeStore, summaryStore } = getContext('app');  \n\n  export let field;\n  export let editing;\n  export let options;\n  export let store = \"scopeStore\";\n \n  $: storeToUse = getStore(store); \n  \n  function getStore(store) {\n    if (store === \"scopeStore\") {\n      return $scopeStore\n    }\n    if (store === \"summaryStore\") {\n      return $summaryStore\n    }\n  }\n</script>\n",
    "{#if editing}\n  {#if multiline}\n    <textarea\n    bind:value={storeToUse[field]}\n    id={`evaluation-meta-edit-${field}`}\n    ></textarea>\n  {:else}\n  <input\n    type=\"text\"\n    bind:value={storeToUse[field]}\n    id={`evaluation-meta-edit-${field}`} />\n  {/if}\n{:else}\n  {#if storeToUse[field]}\n    {storeToUse[field]}\n  {:else}\n    <span class=\"no-result\">{TRANSLATED.LABEL_NOT_PROVIDED}</span>\n  {/if}\n{/if}\n\n<style>\n  .no-result {\n    font-weight: normal;\n    font-style: italic;\n    margin-bottom: 1em;\n  }\n  textarea {\n    margin-bottom: 1em;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  const { scopeStore, summaryStore, translate } = getContext('app');  \n  \n  export let field;\n  export let multiline = false;\n  export let editing;\n  export let store;\n\n  $: storeToUse = getStore(store); \n  \n  function getStore(store) {\n    if (store === \"scopeStore\") {\n      return $scopeStore\n    }\n    if (store === \"summaryStore\") {\n      return $summaryStore\n    }\n  }\n\n  $: TRANSLATED = {\n    LABEL_NOT_PROVIDED: $translate('UI.REPORT.LABEL_NOT_PROVIDED'),\n  };\n</script>",
    "<ReportNumbers criteria={criteriaCount} />\n\n<ul class=\"result-cards\">\n  {#each resultsByCategory as category}\n    <ResultCard\n      label={category.name}\n      items={category.items} />\n  {/each}\n</ul>\n{#if resultsByCategory[4].items.length > 0 && assertions.length > 0}\n  <details>\n    <summary>\n      <h3>{resultsByCategory[4].name} ({resultsByCategory[4].items.length})</h3>\n    </summary>\n    <ul class=\"result-missing\">\n      {#each resultsByCategory[4].items as item}\n        <li>\n          <Link to={`/evaluation/audit-sample#criterion-${normaliseId(item)}`}>{item.test.num}: {TRANSLATED.CRITERIA[item.test.num].TITLE}</Link>\n        </li>\n      {/each}\n    </ul>\n  </details>\n{/if}\n\n<style>\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n  .result-cards {\n    display: flex;\n    justify-content: space-around;\n    flex-flow: wrap;\n    background-color: var(--off-white);\n    border-radius: 0.5em;\n  }\n  @media (min-width: 60em) {\n    .result-missing {\n      column-count: 2;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { Link } from \"svelte-navigator\";\n  import ReportNumbers from './ReportNumbers.svelte';\n  import ResultCard from './ResultCard.svelte';\n\n  import assertions from '@app/stores/earl/assertionStore/index.js';\n  import subjects, { TestSubjectTypes } from '@app/stores/earl/subjectStore/index.js';\n  import { CriteriaSelected } from '@app/stores/selectedCriteriaStore.js';\n  let criteriaCount = 0;\n  $: criteriaCount = $CriteriaSelected.length;\n\n  const { translateToObject } = getContext('app');\n  const { outcomeValues } = getContext('Evaluation');\n\n  $: TRANSLATED = {\n    CRITERIA: $translateToObject('WCAG.SUCCESS_CRITERION')\n  };\n\n  $: resultsByCategory = $outcomeValues.reduce(function(final, outcomeValue){\n    let totalEvaluated = 0;\n    if($assertions.length == 0 && outcomeValue.id == \"earl:untested\"){\n        const value = {\n          name: outcomeValue.title,\n          id: outcomeValue.id,\n          items: $CriteriaSelected\n        };\n        final.push(value);\n    }else if(outcomeValue.id == \"earl:untested\"){\n      const value = {\n          name: outcomeValue.title,\n          id: outcomeValue.id,\n          items: $assertions.filter(assertion => \n            assertion.result.outcome.id === outcomeValue.id && \n            assertion.subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0)\n        };\n        final.push(value);\n    }else{\n        const value = {\n          name: outcomeValue.title,\n          id: outcomeValue.id,\n          items: $assertions.filter(assertion => \n            assertion.result.outcome.id === outcomeValue.id && \n            assertion.subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0)\n        };\n        final.push(value);\n    }\n    return final;\n}, []);\n\n  function normaliseId(item) {\n    return item.test.num.replaceAll('.','')\n  }\n</script>\n",
    "<a\n  href=\"{href}\"\n  class=\"link-to-guidance button button-small button-secondary\"\n  target=\"_blank\"\n  rel=\"noopener roreferrer\"\n>\n  <svg aria-hidden=\"true\" class=\"icon-info\"><use\n      xlink:href={`${$basepath}/images/icons.svg#icon-info`}\n    ></use></svg>\n  <span>\n    <slot />\n  </span>\n</a>\n\n<style>\n  .link-to-guidance {\n    border-width: 1px;\n    font-weight: normal;\n    color: var(--dk-grey);\n    border-color: var(--line-grey);\n    vertical-align: middle;\n    margin: 2px 0;\n  }\n  .link-to-guidance:hover,\n  .link-to-guidance:focus {\n    color: var(--off-black);\n    background-color: var(--off-white);\n  }\n  .link-to-guidance svg {\n    margin-right: 0.25em;\n  }\n  :global(.link-to-guidance + form) {\n    margin-top: 2em;\n  }\n</style>\n\n<script>\n  import { basepath } from '@app/stores/appStore.js';\n\n  export let href;\n</script>\n",
    "<Panel title=\"{siteName || TRANSLATED.HEADING_PANEL}\" subtitle=\"{siteName ? TRANSLATED.REPORT_FOR : ''}\">\n  {#if totalEvaluated > 0 || !isOverview}\n    <ReportNumbers criteria={criteriaCount}></ReportNumbers>\n\n    <ProgressBar percentage={percentageTotalEvaluated}></ProgressBar>\n    \n    <ul class=\"your-report__progress-by-principle\">\n      {#each principles as principle}\n      <li class=\"progress\">\n        <div class=\"progress__principle\">\n          {#if isAuditSample}\n          <a href={`/evaluation/audit-sample#principle-${TRANSLATED.PRINCIPLES[principle].TITLE.toLowerCase()}`} class=\"principle__name\">\n            <span>{TRANSLATED.PRINCIPLES[principle].TITLE}</span>\n          </a>\n          {:else}\n          <Link to={`/evaluation/audit-sample#principle-${TRANSLATED.PRINCIPLES[principle].TITLE.toLowerCase()}`} class=\"principle__name\">\n            <span>{TRANSLATED.PRINCIPLES[principle].TITLE}</span>\n          </Link>\n          {/if} \n          <span class=\"progress__part\">{totalsPerPrinciple[principle][\"done\"]} {TRANSLATED.OF} {totalsPerPrinciple[principle][\"total\"]}</span>\n        </div>\n        <ProgressBar percentage=\"{totalsPerPrinciple[principle][\"percentage\"]}\"></ProgressBar>\n      </li>\n      {/each}\n    </ul>\n    \n    <Link class=\"button\" to=\"/evaluation/view-report\">\n      {TRANSLATED.VIEW_REPORT}\n    </Link>\n    {#if $interacted == true}\n    <Button type=\"secondary\" on:click={handleClearEvaluationClick}>\n      {TRANSLATED.CLEAR_REPORT}\n    </Button>\n    {/if}\n  {:else}\n    <p>{TRANSLATED.NOT_STARTED}</p>\n    <Button on:click=\"{handleNewEvaluationClick}\">\n      {TRANSLATED.BUTTON_NEW_EVALUATION}\n    </Button>\n    <OpenEvaluation />\n  {/if}\n</Panel>\n\n<style>  \n.your-report__progress-by-principle {\n  columns: 1;\n}\n:global(.your-report .button + .File),\n:global(.your-report .button + .button) { \n  margin-top: 4px; \n}\n</style>\n\n<script>\n  import { getContext, onMount } from 'svelte';\n  import { Link, useNavigate, useLocation } from 'svelte-navigator';\n\n  import Panel from '@app/components/ui/Panel.svelte';\n  import ProgressBar from '@app/components/ui/ProgressBar.svelte';\n  import ReportNumbers from '@app/components/ui/Report/ReportNumbers.svelte';\n  import OpenEvaluation from '@app/components/form/OpenEvaluation.svelte';\n  import Button from '@app/components/ui/Button.svelte';\n\n  import { wcag, scopedWcagVersions } from '@app/stores/wcagStore.js';\n  import { routes } from '@app/stores/appStore.js';\n  import assertions from '@app/stores/earl/assertionStore/index.js';\n  import evaluationStore from '@app/stores/evaluationStore.js';\n\n  import subjects, { TestSubjectTypes } from '@app/stores/earl/subjectStore/index.js';\n  import { CriteriaSelected } from '@app/stores/selectedCriteriaStore.js';\n  let criteriaCount = 0;\n  $: criteriaCount = $CriteriaSelected.length;\n\n  import { interacted } from '@app/stores/interactedStore.js';\n  \n  const navigate = useNavigate();\n  const location = useLocation();\n  const { translate, translateToObject, scopeStore } = getContext('app');\n\n  $: TRANSLATED = {\n    BUTTON_NEW_EVALUATION: $translate('UI.NAV.MENU_NEW', {\n      default: 'Start new report'\n    }),\n    PRINCIPLES: $translateToObject('WCAG.PRINCIPLE'),\n    HEADING_PANEL: $translate('UI.COMMON.YOUR_REPORT', {\n      default: 'Your report'\n    }),\n    STEP: $translate('UI.NAV.STEP', { default: 'step' }),\n    VIEW_REPORT: $translate('UI.NAV.VIEWREPORT', {\n      default: 'View report'\n    }),\n    CLEAR_REPORT: $translate('UI.NAV.CLEARREPORT', {\n      default: 'Clear report'\n    }),\n    CLEAR_WARNING: $translate('UI.NAV.CLEARWARNING'),\n    NOT_STARTED: $translate('UI.NAV.NOT_STARTED'),\n    CONFORMANCE_LEVEL: $translate('WCAG.COMMON.CONFORMANCE_LEVEL'),\n    REPORT_FOR: $translate('UI.REPORT.REPORT_FOR'),\n    OF: $translate('UI.REPORT.REPORTED_ON_OF'),\n  };\n\n  $: conformanceTarget = $scopeStore['CONFORMANCE_TARGET'];\n  $: percentageTotalEvaluated = 100 / $CriteriaSelected.length * totalEvaluated;\n\n  $: principles = [...new Set($wcag.map((a) => a.num.split('.')[0]))];\n\n  $: filteredCriteria = {\n   1: $CriteriaSelected.filter(item => item.num.startsWith(\"1.\")).filter(isInScope) || {},\n   2: $CriteriaSelected.filter(item => item.num.startsWith(\"2.\")).filter(isInScope) || {},\n   3: $CriteriaSelected.filter(item => item.num.startsWith(\"3.\")).filter(isInScope) || {},\n   4: $CriteriaSelected.filter(item => item.num.startsWith(\"4.\")).filter(isInScope) || {}\n  };\n\n  $: filteredAssertions = {\n   1: $assertions.filter(item => item.test.num.startsWith(\"1.\")).filter(isEvaluated),\n   2: $assertions.filter(item => item.test.num.startsWith(\"2.\")).filter(isEvaluated),\n   3: $assertions.filter(item => item.test.num.startsWith(\"3.\")).filter(isEvaluated),\n   4: $assertions.filter(item => item.test.num.startsWith(\"4.\")).filter(isEvaluated)\n  }\n\n  $: totalsPerPrinciple = {\n    1: {\n      \"done\": filteredAssertions[1].length,\n      \"total\": filteredCriteria[1].length,\n      \"percentage\": (filteredAssertions[1].length / filteredCriteria[1].length) * 100\n    },\n    2: {\n      \"done\": filteredAssertions[2].length,\n      \"total\": filteredCriteria[2].length,\n      \"percentage\": (filteredAssertions[2].length / filteredCriteria[2].length) * 100\n    },\n    3: {\n      \"done\": filteredAssertions[3].length,\n      \"total\": filteredCriteria[3].length,\n      \"percentage\": (filteredAssertions[3].length / filteredCriteria[3].length) * 100\n    },\n    4: {\n      \"done\": filteredAssertions[4].length,\n      \"total\": filteredCriteria[4].length,\n      \"percentage\": (filteredAssertions[4].length / filteredCriteria[4].length) * 100\n    },    \n  }\n\n  function isInScope(wcagSC) {\n    return  wcagSC.conformanceLevel.length <= conformanceTarget.length && conformanceTarget.length &&  $scopedWcagVersions.includes(wcagSC.version)\n  };\n\n  function isEvaluated(assertion) {\n    return assertion.result.outcome.id !== \"earl:untested\" && assertion.subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0\n  }\n\n  function handleNewEvaluationClick() {\n    $evaluationStore.reset();\n    navigate($routes.SCOPE.path, { replace: true });\n  }\n\n  function handleClearEvaluationClick() {\n    var clearResult = window.confirm(TRANSLATED.CLEAR_WARNING);\n    if(clearResult){\n      $evaluationStore.reset();\n      $interacted = false;\n      navigate($routes.SCOPE.path, { replace: true });\n    }\n  }\n\n  onMount(() => {\n    window.addEventListener(\"input\", setInteracted);\n  });\n  function setInteracted(e){\n      if(e.target.type != \"file\"){\n        window.removeEventListener(\"input\", setInteracted);\n        $interacted = true;\n      }\n  }\n\n  $: isOverview = $location.pathname === $routes.OVERVIEW.path; \n  $: isAuditSample = $location.pathname === $routes.AUDIT.path; \n  $: siteName = $scopeStore['SITE_NAME'];\n  $: totalToEvaluate = $assertions.filter(assertion => \n    assertion.result.outcome.id == \"earl:untested\").length;\n  $: totalEvaluated = $assertions.filter(assertion => \n    assertion.result.outcome.id !== \"earl:untested\" && assertion.subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0).length;\n</script>",
    "<!--\n * @component\n * ListInput\n * A customizable forminput that receives\n * a value as array with either a string or an object.\n * a format of how to add a list item which is\n * an array of objects containing:\n * - required label\n * - required type; text | textarea | select | checkbox(group)\n * - optional helptext\n * - optional ...any; required props to pass on to specific formcomponents\n *\n * -->\n\n<div class=\"AddOther__container\">\n  <div\n    class=\"AddOther__Inputs\"\n    bind:this=\"{otherInputsContainer}\"\n    on:keydown=\"{handleAddKeydown}\"\n  >\n    <slot />\n  </div>\n  <Button type=\"secondary\" on:click=\"{handleAddClick}\">{label}</Button>\n</div>\n\n<style>\n  :global(.AddOther__Inputs > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n  :global(.AddOther__Inputs > *:last-child) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  import Button from '@app/components/ui/Button.svelte';\n\n  export let label = 'Add';\n\n  const dispatch = createEventDispatcher();\n\n  let otherInputsContainer;\n  let otherInputs;\n\n  onMount(() => {\n    otherInputs = Array.from(\n      otherInputsContainer.querySelectorAll('input, select, textarea')\n    );\n  });\n\n  function handleAddKeydown(event) {\n    if (event.key.toLowerCase() === 'enter') {\n      event.preventDefault();\n\n      dispatchAdd();\n    }\n  }\n\n  function handleAddClick(event) {\n    event.preventDefault();\n    dispatchAdd();\n  }\n\n  function dispatchAdd() {\n    const detail = otherInputs.map((input) => {\n      return input.value;\n    });\n\n    if (otherInputs.length > 0) {\n      // Clear fields\n      otherInputs.forEach((input) => {\n        input.value = '';\n      });\n\n      otherInputs[0].focus();\n    }\n\n    dispatch('ADD', detail);\n  }\n</script>\n",
    "<div class={`${className} Field`}>\n  <slot />\n  {#if helptext}\n    <HelpText\n      labelHTML=\"{label && `<label for=\"${id}\">${label}</label>`}\"\n      {label}\n    >\n      {@html helptext}\n    </HelpText>\n  {:else if label}<label for=\"{id}\">{label}:</label>{/if}\n</div>\n\n<style>\n  .Field {\n    padding: 0;\n    margin-bottom: 2rem;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  .Field label {\n    display: block;\n  }\n  .Field label,\n  :global(.Field .HelpText) {\n    order: -1;\n  }\n  :global(.Field input) {\n    width: 100%;\n  }\n  :global(.Field > *:not(:last-child)) {\n    margin-bottom: 0.25em;\n  }\n</style>\n\n<script>\n  import HelpText from './HelpText.svelte';\n\n  export let id;\n  export let label;\n  export let helptext = \"\";\n  export let className = \"\";\n</script>\n",
    "<fieldset id=\"{id}\" class=\"Fieldset field\">\n  <legend>\n    {@html legend}\n    {#if helptext}\n      <button \n        type=\"button\" \n        on:click={toggle} \n        class=\"button button-small showhidebutton\" \n        aria-expanded={showHelptext} \n        aria-controls={`field-helptext-${id}`}\n        aria-label={`${TRANSLATED.SHOW_HIDE_HELPTEXT} ${TRANSLATED.FOR} ${legend}`}>\n          {TRANSLATED.SHOW_HIDE_HELPTEXT}\n      </button>\n      {#if showHelptext}\n        <div class=\"Fieldset__helptext\" id={`field-helptext-${id}`}>\n        {@html helptext}\n        </div>\n      {/if}\n    {/if}\n  </legend>\n\n  <div class=\"Fieldset__elements\">\n    <slot />\n  </div>\n</fieldset>\n\n<style>\n  .Fieldset {\n    padding: 0;\n  }\n  .Fieldset legend /* override from original WAI style to make it work better in this application  */ {\n    font-size: 1rem;\n  }\n  .Fieldset__helptext {\n    font-size: 1rem; /* reset legend size */\n    font-weight: normal; /* reset legend weight */\n    margin: 1em 0;\n    border: solid 1px #069;\n    padding: 1em;\n    background-color: #d0e1f1;\n  }\n\n  :global(.Fieldset__elements > *:not(:last-child)) {\n    margin-bottom: 2rem;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  export let id;\n  export let legend;\n  export let helptext = \"\";\n\n  function toggle() {\n    showHelptext = !showHelptext;\n  }\n\n  let showHelptext = false;\n\n  const { translate } = getContext('app');\n  $: TRANSLATED = {\n    SHOW_HIDE_HELPTEXT: showHelptext\n      ? $translate('UI.COMMON.BUTTON.HIDE', {\n          values: { subject: $translate('UI.COMMON.BUTTON.INFO') }\n        })\n      : $translate('UI.COMMON.BUTTON.SHOW', {\n          values: { subject: $translate('UI.COMMON.BUTTON.INFO') }\n        }),\n    FOR: $translate('UI.COMMON.FOR')\n  };\n</script>\n",
    "<div class=\"File\">\n  <input\n    id=\"{id}\"\n    class=\"File__input visuallyhidden\"\n    type=\"file\"\n    accept=\"{accept}\"\n    bind:files\n    bind:value\n    on:change\n  />\n  <label for=\"{id}\" class=\"File__label button button-secondary\">\n    {label}\n    {#if labelsub}<span class=\"File__label-hint\">{labelsub}</span>{/if}\n  </label>\n  {#if showFiles}\n    <output for=\"{id}\" title=\"Selected file(s)\">\n      {#each files as file}{file.name}<br />{:else}No file selected{/each}\n    </output>\n  {/if}\n</div>\n\n<style>\n  div { display: inline-block; }\n  :focus + .File__label {\n    color: #fff;\n    background-color: #036;\n    border-color: #036;\n  }\n\n  .File__label {\n    display: block;\n    text-align: center;\n  }\n  .File__label-hint {\n    display: block;\n    font-weight: 400;\n  }\n</style>\n\n<script context=\"module\">\n  export function readFile(file, callback = () => {}) {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      callback(fileReader.result);\n    };\n\n    fileReader.onabort = () => {\n      console.error('Reading aborted');\n    };\n\n    fileReader.onerror = (error) => {\n      throw error;\n    };\n\n    fileReader.readAsText(file);\n  }\n</script>\n\n<script>\n  export let id;\n  export let label = 'File';\n  export let labelsub = '';\n  export let value = '';\n  export let accept = ['.json', '.jsonld'].join(',');\n  export let showFiles = false;\n\n  let files = [];\n</script>\n",
    "<!--\n * @component\n * HelpText\n * @property label <String|@html>\n * @slot Detail contents\n * -->\n<div class=\"HelpText information\" >\n  <div class=\"HelpText__label\">\n    {@html labelHTML}\n    <button \n      type=\"button\" \n      on:click={toggle} \n      class=\"button button-small showhidebutton\"\n      aria-expanded=\"{open}\"\n      aria-label={`${buttonText} ${TRANSLATED.FOR} ${label}`}\n    >\n     {@html buttonText} \n    </button>\n  </div>\n   {#if open}\n  <div class=\"HelpText__body\">\n    <slot />\n  </div>\n  {/if}\n</div>\n <!-- /component -->\n\n<style>\n  .HelpText {\n    padding: 0;\n  }\n\n  :global(.HelpText__label label) {\n    display: inline-block;\n  }\n\n  .HelpText__body {\n    margin: 1em 0;\n    border: solid 1px #069;\n    padding: 1em;\n    background-color: #d0e1f1;\n  }\n\n  :global(.HelpText__body > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n\n  :global(.HelpText__body > *:last-child) {\n    margin: 0;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  export let label;\n  export let labelHTML;\n  export let open = false;\n\n  function toggle() {\n    open = !open;\n  }\n\n  $: buttonText = open ? TRANSLATED.HIDE_INFO : TRANSLATED.SHOW_INFO;\n\n  const { translate } = getContext('app');\n\n  $: TRANSLATED = {\n    HIDE_INFO: $translate('UI.COMMON.BUTTON.HIDE', {\n      default: 'Hide {subject}',\n      values: {\n        subject: $translate('UI.COMMON.BUTTON.INFO', { default: 'info' })\n      }\n    }),\n    SHOW_INFO: $translate('UI.COMMON.BUTTON.SHOW', {\n      default: 'Show {subject}',\n      values: {\n        subject: $translate('UI.COMMON.BUTTON.INFO')\n      }\n    }),\n    FOR: $translate('UI.COMMON.FOR')\n  };\n</script>\n",
    "<Field id=\"{id}\" {...$$restProps}>\n  <input\n    id=\"{id}\"\n    type=\"text\"\n    on:keydown\n    bind:value\n    bind:this=\"{textInput}\"\n  />\n</Field>\n\n<script>\n  import { onMount } from 'svelte';\n  import Field from './Field.svelte';\n\n  export let id;\n  export let value = '';\n  export let autofocus = false;\n\n  let textInput;\n\n  onMount(() => {\n    if (autofocus) {\n      textInput.focus();\n    }\n  });\n</script>\n\n<style>\n  input {\n    max-width: 40em;;\n  }\n</style>",
    "<Fieldset id=\"{id}\" legend={label} {...$$restProps}>\n\n  <ol class=\"MultipleChoice__options{columns ? '--columns' : ''}\">\n    {#each options as option, index (option)}\n      <li class=\"MultipleChoice__option\">\n        <!-- type attribute cant be dynamic with bind:group -->\n        {#if type === CHECKBOX}\n          <!-- svelte-ignore a11y-no-onchange -->\n          <input\n            id=\"{`${id}_${index}`}\"\n            class=\"MultipleChoice__option__input\"\n            type=\"checkbox\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {:else if type === RADIO}\n          <input\n            id=\"{`${id}_${index}`}\"\n            class=\"MultipleChoice__option__input\"\n            type=\"radio\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {/if}\n        <label class=\"MultipleChoice__option__label\" for=\"{`${id}_${index}`}\">{option.title || option}</label>\n      </li>\n    {/each}\n  </ol>\n\n  {#if editable}\n    <AddOther label=\"Add other {label}\" on:ADD=\"{handleOptionAdd}\">\n      <Input id=\"{id}__other\" label=\"Other {label}\" />\n    </AddOther>\n  {/if}\n</Fieldset>\n\n<style>\n  .MultipleChoice__option__label,\n  .MultipleChoice__option__input {\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  .MultipleChoice__option__input {\n    flex-grow: 0;\n    flex-shrink: 0;\n    width: 1em;\n    height: 1em;\n  }\n\n  .MultipleChoice__option__label {\n    margin-left: 0.5em;\n    flex-grow: 0;\n    flex-shrink: 1;\n    word-break: break-word;\n  }\n\n  .MultipleChoice__option__input:focus,\n  .MultipleChoice__option__input:hover {\n    outline: 2px solid currentColor;\n    outline-offset: 2px;\n  }\n\n  .MultipleChoice__options,\n  .MultipleChoice__options--columns {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .MultipleChoice__options--columns {\n    columns: 4 10em;\n    column-gap: 2em;\n  }\n\n  .MultipleChoice__option {\n    break-inside: avoid-column;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n</style>\n\n<script context=\"module\">\n  const CHECKBOX = 'checkbox';\n  const RADIO = 'radio';\n</script>\n\n<script>\n  import AddOther from './AddOther.svelte';\n  import Fieldset from './Fieldset.svelte';\n  import Input from './Input.svelte';\n\n  export let id;\n  export let label;\n  export let type = CHECKBOX;\n  export let options = [];\n  export let columns = false;\n  export let editable = false;\n  export let value = [];\n\n  function handleOptionAdd(event) {\n\n    const newValue = event.detail.join();\n\n    if (!newValue) {\n      return;\n    }\n\n    const newOption = {\n      title: event.detail.join()\n      // checked: true\n    };\n\n    if (!options.some((option) => option.title === newOption.title)) {\n      options = [...options, newOption];\n      value = [...value, newOption.title];\n    }\n  }\n</script>\n",
    "<Editable\n  id=\"{data.ID}\"\n  label=\"{data.title || $translate('PAGES.SAMPLE.SAMPLE_PAGE')}\"\n  persistent=\"{true}\"\n  removable=\"{true}\"\n  on:DELETE\n>\n  <fieldset>\n    <legend>{$translate('PAGES.SAMPLE.SAMPLE_PAGE')} {data.title || count}</legend>\n    <div class=\"sample-input\">\n      <Input\n        id=\"{id}--title\"\n        label=\"{$translate('PAGES.SAMPLE.LABEL_HANDLE')}\"\n        autofocus=\"{true}\"\n        bind:value=\"{data.title}\"\n      />\n      <Input\n        id=\"{id}--description\"\n        label=\"{$translate('PAGES.SAMPLE.LABEL_PAGE')}\"\n        bind:value=\"{data.description}\"\n      />\n    </div>\n  </fieldset>\n</Editable>\n\n<style>\n\n@media (min-width: 40em) {\n  .sample-input {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    gap: 1em;\n  }\n}\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import Editable from '@app/components/form/Editable.svelte';\n  import Input from '@app/components/form/Input.svelte';\n\n  export let id;\n  export let data;\n  export let count;\n\n  const { translate } = getContext('app');\n</script>\n",
    "<!--\n * @component\n *   AuditorFilter\n *\n * @note\n *   Might be good to setup for dynamic additions\n *   e.g. pass filters and cycle with each\n *   also dispatching a FILTER event back up with details\n * -->\n<div class=\"Auditor__Filter\">\n  <MultipleChoice\n    id=\"filter_wcag_version\"\n    label={TRANSLATED['LABEL_VERSION']}\n    type=\"radio\"\n    options=\"{versionFilterOptions}\"\n    bind:value=\"{$auditFilter['VERSION']}\"\n  />\n\n  <MultipleChoice\n    id=\"filter_conformance_level\"\n    label={TRANSLATED['LABEL_LEVEL']}\n    options=\"{conformanceLevels}\"\n    helptext={false}\n    bind:value=\"{$auditFilter['LEVEL']}\"\n  />\n\n  <AuditorSamples />\n</div>\n<!-- /component -->\n\n<style>\n  .Auditor__Filter {\n    grid-column: 1 / 2;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { auditFilter } from '@app/stores/auditStore.js';\n  import { CONFORMANCE_LEVELS, scopedWcagVersions } from '@app/stores/wcagStore.js';\n\n  import AuditorSamples from './AuditorSamples.svelte';\n  import MultipleChoice from '@app/components/form/MultipleChoice.svelte';\n\n  const { translate } = getContext('app');\n  const { scopeStore } = getContext('app');\n\n  const wcagVersions = [...$scopedWcagVersions].reverse();\n\n  $: versionFilterOptions = wcagVersions.reduce((result, version, index) => {\n    const newFilter = {\n      title: `WCAG ${version}`,\n      value: wcagVersions.filter((VERSION) => {\n        return VERSION <= version;\n      }).join()\n    };\n    result.push(newFilter);\n\n    if (index === $scopedWcagVersions.length - 1) {\n      return result;\n    }\n\n    // Add a version added filter\n    // Last index excluded, it is the first version.\n    result.push({\n      title: TRANSLATED['ADDED_IN'] + \" WCAG \"  + version,\n      value: version\n    });\n\n    return result;\n  }, []);\n\n  $: TRANSLATED = {\n    LABEL_VERSION: $translate('PAGES.AUDIT.LABEL_VERSION'),\n    LABEL_LEVEL: $translate('PAGES.AUDIT.LABEL_LEVEL'),\n    ADDED_IN: $translate('PAGES.AUDIT.ADDED_IN')\n  }\n\n  $: conformanceLevels = CONFORMANCE_LEVELS.reduce((result, level, index) => {\n    if($scopeStore['CONFORMANCE_TARGET'].startsWith(level)){\n      const newFilter = {\n        title: `${$translate('WCAG.COMMON.CONFORMANCE_LEVEL')} ${level}`,\n        value: level\n    };\n    result.push(newFilter);\n    }\n    \n    return result;\n  }, []);\n\n</script>\n",
    "<fieldset class=\"AuditorSamples\">\n  <legend>\n    {TRANSLATED.SAMPLE_SELECT_HEADING}\n  </legend>\n\n  <ol class=\"AuditorSamples__list\">\n  {#if $allSamples.length > 0 }\n    {#each $allSamples as sample, index (sampleID(index))}\n      <li class=\"AuditorSamples__item\">\n        <input\n          id=\"sample__{sampleID(index)}\"\n          type=\"checkbox\"\n          value=\"{sample.ID}\"\n          bind:group=\"{$auditSamples}\"\n        />\n        <label\n          for=\"sample__{sampleID(index)}\"\n        >{sample.title || sample.description || $translate('PAGES.SAMPLE.SAMPLE_PAGE') + \" \" + sampleID(index)}\n          {#if sample.completed}\n            <span\n              class=\"visuallyhidden\"\n            >{TRANSLATED.SAMPLE_SELECT_TESTED}</span>\n          {/if}\n        </label>\n        {#if isURL(sample.description)}\n          <a class=\"AuditorSamples__link\" href=\"{sample.description}\" aria-label={sample.title}>\n            <svg \n              xmlns=\"http://www.w3.org/2000/svg\" \n              width=\"1em\" \n              viewBox=\"0 0 24 24\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              stroke-width=\"2\" \n              aria-hidden=\"true\"\n              role=\"presentation\"\n              focusable=\"false\"\n              stroke-linecap=\"round\" \n              stroke-linejoin=\"round\">\n                <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n                <polyline points=\"15 3 21 3 21 9\"></polyline>\n                <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n              </svg>\n          </a>\n        {/if}\n    </li>\n    {/each}\n    <div class=\"AuditorSamples__select-all\">\n      <input\n        id=\"AuditorSamples__multiselect\"\n        type=\"checkbox\"\n        indeterminate=\"{someChecked}\"\n        checked=\"{allChecked}\"\n        on:change=\"{handleMultiselectClick}\"\n      />\n      <label\n        for=\"AuditorSamples__multiselect\"\n      >{TRANSLATED.SAMPLE_SELECT_LABEL_SELECT_ALL}</label>\n    </div>\n  {:else}\n    <div class=\"AuditorSamples__empty\">{TRANSLATED.SAMPLE_SELECT_NO_SAMPLE}</div>\n  {/if}\n</fieldset>\n\n<style media=\"screen\">\n  .AuditorSamples__list {\n    padding: 0;\n    margin: 0;\n  }\n  .AuditorSamples__item {\n    list-style: none;\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: start;\n  }\n  .AuditorSamples__item label {\n    margin-left: .5em;\n    overflow-wrap: anywhere;\n  }\n  .AuditorSamples__item input {\n    width: 1em;\n    height: 1em;\n    flex: none;\n  }\n  .AuditorSamples__select-all {\n    margin-top: 1em;\n  }\n  .AuditorSamples__link {\n    vertical-align: middle;\n    margin-left: .25em;\n  }\n  legend {\n    font-size: 1rem;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { auditSamples } from '@app/stores/auditStore.js';\n  import { allSamples } from '@app/stores/sampleStore.js';\n\n  const { translate } = getContext('app');\n\n  $: TRANSLATED = {\n    SAMPLE_SELECT_HEADING: $translate('PAGES.AUDIT.HD_SAMPLE_SELECT'),\n    SAMPLE_SELECT_INFO: $translate('PAGES.AUDIT.INF_AUDIT_SAMPLE'),\n    SAMPLE_SELECT_LABEL_SELECT_ALL: $translate('PAGES.AUDIT.SELECT_ALL'),\n    SAMPLE_SELECT_BUTTON_COMPLETE_SELECTED: $translate('PAGES.AUDIT.BTN_COMPLETE_SELECTED'),\n    SAMPLE_SELECT_BUTTON_UNCOMPLETE_SELECTED: $translate('PAGES.AUDIT.BTN_UNCOMPLETE_SELECTED'),\n    SAMPLE_SELECT_BUTTON_OPEN_SELECTED: $translate('PAGES.AUDIT.BTN_OPEN_SELECTED'),\n    SAMPLE_SELECT_TESTED: $translate('PAGES.AUDIT.TESTED'),\n    SAMPLE_SELECT_NO_SAMPLE: $translate('PAGES.AUDIT.NO_SAMPLE')\n  };\n\n  $: allSampleIDs = $allSamples.map((sample) => sample.ID);\n  $: allChecked = allSampleIDs.length === $auditSamples.length;\n  $: someChecked = !allChecked && $auditSamples.length > 0;\n\n  function sampleID(index) {\n    return parseInt(index, 10) + 1;\n  }\n\n  function isURL(value) {\n    try {\n      return new URL(value);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function handleMultiselectClick() {\n    $auditSamples = [];\n\n    if (!allChecked) {\n      $auditSamples = allSampleIDs;\n    }\n  }\n</script>\n",
    "<!--\n * @component\n * Criterion\n * -->\n<div class=\"criterion\" id={`criterion-${normaliseId(test)}`} data-version={version}>\n  <header class=\"criterion-header\">\n    <h3>{num}: {TRANSLATED.CRITERION.TITLE}</h3>\n    <em class=\"criterion-header__level\">Level {conformanceLevel}</em>\n    <div class=\"criterion__resource-links\">\n\t\t\t{#if wcagVersion == '20'}\n\t      <ResourceLink\n\t        href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG{wcagVersion}/{id}.html\"\n\t      >\n\t        {TRANSLATED.UNDERSTAND_BUTTON}\n\t        {num}\n\t      </ResourceLink>\n\t\t\t{:else}\n\t      <ResourceLink\n\t        href=\"https://www.w3.org/WAI/WCAG{wcagVersion}/Understanding/{id}.html\"\n\t      >\n\t        {TRANSLATED.UNDERSTAND_BUTTON}\n\t        {num}\n\t      </ResourceLink>\n\t\t\t{/if}\n      <ResourceLink href=\"https://www.w3.org/WAI/WCAG{wcagVersion}/quickref/#{id}\">\n        {TRANSLATED.HOW_TO_BUTTON}\n        {num}\n      </ResourceLink>\n    </div>\n  </header>\n\n    <p>{TRANSLATED.CRITERION.DESCRIPTION}     \n      {#if TRANSLATED.CRITERION.DETAILS[1]}\n      <button \n        type=\"button\" \n        class=\"showhidebutton button button-small\"\n        aria-expanded={criterionDetailsOpen}\n        on:click={toggleCriterionDetails}\n      >\n        {TRANSLATED.SHOW_FULL_DESCRIPTION}\n      </button>\n      {/if}\n    </p>\n    <!-- \n        not all criteria have 'details'; in the data,\n        all SCs have a DETAILS object. Only the ones that\n        have details will contain one or more objects,\n        so if there is DETAILS[1], there are details \n        to display\n    -->\n    {#if TRANSLATED.CRITERION.DETAILS[1]}\n      {#if criterionDetailsOpen}\n        <ul tabindex=\"-1\" bind:this={criterionDetails}>\n          {#each Object.keys(TRANSLATED.CRITERION.DETAILS) as DETAIL}\n            <li>\n              <p>\n                {#if TRANSLATED.CRITERION.DETAILS[DETAIL].TITLE}<strong>{TRANSLATED.CRITERION.DETAILS[DETAIL].TITLE}</strong>:{/if}\n                {TRANSLATED.CRITERION.DETAILS[DETAIL].DESCRIPTION}\n              </p>\n            </li>\n          {/each}\n        </ul>\n      {/if}\n    {/if}\n\n  <!--\n   * Results for scope\n   * assertion.subject === WebSite\n   * assertion.result\n   * -->\n  <EarlResult\n    label=\"{TRANSLATED.SCOPE_RESULT_LEGEND}\"\n    test=\"{test}\"\n    subject=\"{scopeSubject}\"\n  />\n\n  {#if $allSamples.length > 0 && $auditSamples.length > 0}\n  <details>\n    <summary><h4>{TRANSLATED.SAMPLE_RESULTS_DETAILS_BUTTON}</h4></summary>\n    <!--\n     * Sample results should be generated from\n     * (sample) assertions.\n     * Assertions should be preferably created at\n     * samplePage or sampleInput?\n     * Then assertions should be filtered\n     * by the selected list of AuditorSamples.\n     *\n     * Then each assertion => <EarlResult {...assertion} />\n   -->\n    {#each $allSamples as sample, index (`${num}-${sample.ID}`)}\n      {#if $auditSamples.indexOf(sample.ID) >= 0}\n        <EarlResult\n          label=\"{TRANSLATED.RESULT_FOR_LABEL}: {sample.title || sample.description || `Sample ${index + 1}`}\"\n          test=\"{test}\"\n          subject=\"{sample}\"\n        />\n      {/if}\n    {:else}\n      <p>No sample(s) selected.</p>\n    {/each}\n  </details>\n  {/if}\n</div>\n<!-- /component -->\n\n<style>  \n.criterion {\n  margin-bottom: 1em;\n}\n:global(.criterion:target) {\n  outline: 2px solid var(--gold);\n}\n.criterion-details {\n  padding-left: 0;\n}\n.criterion-details-button {\n  margin: .5em 0 1.5em;\n}\n.criterion__resource-links {\n  margin: .5em 0;\n}\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { auditSamples } from '@app/stores/auditStore.js';\n  import { allSamples } from '@app/stores/sampleStore.js';\n  import tests from '@app/stores/earl/testStore/index.js';\n  import subjects, {\n    TestSubjectTypes\n  } from '@app/stores/earl/subjectStore/index.js';\n\n  import EarlResult from '@app/components/form/EarlResult.svelte';\n  import ResourceLink from '@app/components/ui/ResourceLink.svelte';\nimport Acknowledgements from '../../pages/Acknowledgements.svelte';\n\n  export let conformanceLevel;\n  export let id;\n  export let num;\n  export let version = \"\";\n  export let criterionDetailsOpen = false;\n  let criterionDetails;\n\n  const { translate, translateToObject, scopeStore } = getContext('app');\n\n  $: wcagVersion = $scopeStore['WCAG_VERSION'].replace(\".\", \"\");\n\n  $: TRANSLATED = {\n    UNDERSTAND_BUTTON: $translate('PAGES.AUDIT.UNDERSTAND'),\n    HOW_TO_BUTTON: $translate('PAGES.AUDIT.HOW_TO'),\n    SCOPE_RESULT_LEGEND: $translate('PAGES.AUDIT.SAMPLE_FINDINGS'),\n    SAMPLE_RESULTS_DETAILS_BUTTON: $translate('PAGES.AUDIT.BTN_EXPAND_PAGES'),\n    RESULT_FOR_LABEL: $translate('PAGES.AUDIT.RESULTS_FOR'),\n    CRITERION: $translateToObject('WCAG.SUCCESS_CRITERION')[num],\n    SHOW_FULL_DESCRIPTION: $translate('UI.COMMON.SHOW_FULL_DESCRIPTION')\n  };\n\n  $: test = $tests.find(($test) => {\n    return $test.num === num;\n  });\n\n  $: scopeSubject = $subjects.find((subject) => {\n    return subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0;\n  });\n\n  function normaliseId(test) {\n    return test.num.replaceAll('.','');\n  }\n\n  function toggleCriterionDetails() {\n    criterionDetailsOpen = !criterionDetailsOpen;\n    setTimeout(function() {\n      if (criterionDetailsOpen) {\n        criterionDetails.focus();\n      }\n    }, 100);\n  }\n</script>\n",
    "<ReportNumbers criteria={criteriaCount} />\n\n<ul class=\"result-cards\">\n  {#each resultsByCategory as category}\n    <ResultCard\n      label={category.name}\n      items={category.items} />\n  {/each}\n</ul>\n{#if resultsByCategory[4].items.length > 0 && assertions.length > 0}\n  <details>\n    <summary>\n      <h3>{resultsByCategory[4].name} ({resultsByCategory[4].items.length})</h3>\n    </summary>\n    <ul class=\"result-missing\">\n      {#each resultsByCategory[4].items as item}\n        <li>\n          <Link to={`/evaluation/audit-sample#criterion-${normaliseId(item)}`}>{item.test.num}: {TRANSLATED.CRITERIA[item.test.num].TITLE}</Link>\n        </li>\n      {/each}\n    </ul>\n  </details>\n{/if}\n\n<style>\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n  .result-cards {\n    display: flex;\n    justify-content: space-around;\n    flex-flow: wrap;\n    background-color: var(--off-white);\n    border-radius: 0.5em;\n  }\n  @media (min-width: 60em) {\n    .result-missing {\n      column-count: 2;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { Link } from \"svelte-navigator\";\n  import ReportNumbers from './ReportNumbers.svelte';\n  import ResultCard from './ResultCard.svelte';\n\n  import assertions from '@app/stores/earl/assertionStore/index.js';\n  import subjects, { TestSubjectTypes } from '@app/stores/earl/subjectStore/index.js';\n  import { CriteriaSelected } from '@app/stores/selectedCriteriaStore.js';\n  let criteriaCount = 0;\n  $: criteriaCount = $CriteriaSelected.length;\n\n  const { translateToObject } = getContext('app');\n  const { outcomeValues } = getContext('Evaluation');\n\n  $: TRANSLATED = {\n    CRITERIA: $translateToObject('WCAG.SUCCESS_CRITERION')\n  };\n\n  $: resultsByCategory = $outcomeValues.reduce(function(final, outcomeValue){\n    let totalEvaluated = 0;\n    if($assertions.length == 0 && outcomeValue.id == \"earl:untested\"){\n        const value = {\n          name: outcomeValue.title,\n          id: outcomeValue.id,\n          items: $CriteriaSelected\n        };\n        final.push(value);\n    }else if(outcomeValue.id == \"earl:untested\"){\n      const value = {\n          name: outcomeValue.title,\n          id: outcomeValue.id,\n          items: $assertions.filter(assertion => \n            assertion.result.outcome.id === outcomeValue.id && \n            assertion.subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0)\n        };\n        final.push(value);\n    }else{\n        const value = {\n          name: outcomeValue.title,\n          id: outcomeValue.id,\n          items: $assertions.filter(assertion => \n            assertion.result.outcome.id === outcomeValue.id && \n            assertion.subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0)\n        };\n        final.push(value);\n    }\n    return final;\n}, []);\n\n  function normaliseId(item) {\n    return item.test.num.replaceAll('.','')\n  }\n</script>\n",
    "<script>\n  export let label;\n  export let items = [];\n</script>\n\n<style>\n  .result-card {\n    list-style: none;\n    display: inline-block;\n    margin: 1em;\n    text-align: center;\n  }\n  .result-card__number {\n    font-size: 1.5em;\n    display: block;\n    margin-bottom: 0.125em;\n    line-height: 1;\n    color: var(--ocean);\n  }\n  @media (min-width: 60em) {\n    .result-card__number {\n      font-size: 3em;\n    }\n  }\n  .result-card__label {\n    font-size: 1.125em;\n  }\n</style>\n\n<li class=\"result-card\">\n  <span class=\"result-card__number\">{items.length}</span>\n  <span class=\"result-card__label\">{label}</span>\n</li>\n"
  ],
  "names": [],
  "mappings": "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"
}